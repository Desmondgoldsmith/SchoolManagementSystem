//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KingDessySchool.cs {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("feesdata")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class feesdata : global::System.Data.DataSet {
        
        private feesRecDataTable tablefeesRec;
        
        private Grade2FeesRec1DataTable tableGrade2FeesRec1;
        
        private C1ReportsDataTable tableC1Reports;
        
        private DataTable1DataTable tableDataTable1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public feesdata() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected feesdata(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["feesRec"] != null)) {
                    base.Tables.Add(new feesRecDataTable(ds.Tables["feesRec"]));
                }
                if ((ds.Tables["Grade2FeesRec1"] != null)) {
                    base.Tables.Add(new Grade2FeesRec1DataTable(ds.Tables["Grade2FeesRec1"]));
                }
                if ((ds.Tables["C1Reports"] != null)) {
                    base.Tables.Add(new C1ReportsDataTable(ds.Tables["C1Reports"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public feesRecDataTable feesRec {
            get {
                return this.tablefeesRec;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Grade2FeesRec1DataTable Grade2FeesRec1 {
            get {
                return this.tableGrade2FeesRec1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public C1ReportsDataTable C1Reports {
            get {
                return this.tableC1Reports;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            feesdata cln = ((feesdata)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["feesRec"] != null)) {
                    base.Tables.Add(new feesRecDataTable(ds.Tables["feesRec"]));
                }
                if ((ds.Tables["Grade2FeesRec1"] != null)) {
                    base.Tables.Add(new Grade2FeesRec1DataTable(ds.Tables["Grade2FeesRec1"]));
                }
                if ((ds.Tables["C1Reports"] != null)) {
                    base.Tables.Add(new C1ReportsDataTable(ds.Tables["C1Reports"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablefeesRec = ((feesRecDataTable)(base.Tables["feesRec"]));
            if ((initTable == true)) {
                if ((this.tablefeesRec != null)) {
                    this.tablefeesRec.InitVars();
                }
            }
            this.tableGrade2FeesRec1 = ((Grade2FeesRec1DataTable)(base.Tables["Grade2FeesRec1"]));
            if ((initTable == true)) {
                if ((this.tableGrade2FeesRec1 != null)) {
                    this.tableGrade2FeesRec1.InitVars();
                }
            }
            this.tableC1Reports = ((C1ReportsDataTable)(base.Tables["C1Reports"]));
            if ((initTable == true)) {
                if ((this.tableC1Reports != null)) {
                    this.tableC1Reports.InitVars();
                }
            }
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "feesdata";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/feesdata.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablefeesRec = new feesRecDataTable();
            base.Tables.Add(this.tablefeesRec);
            this.tableGrade2FeesRec1 = new Grade2FeesRec1DataTable();
            base.Tables.Add(this.tableGrade2FeesRec1);
            this.tableC1Reports = new C1ReportsDataTable();
            base.Tables.Add(this.tableC1Reports);
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefeesRec() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGrade2FeesRec1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeC1Reports() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            feesdata ds = new feesdata();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void feesRecRowChangeEventHandler(object sender, feesRecRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Grade2FeesRec1RowChangeEventHandler(object sender, Grade2FeesRec1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void C1ReportsRowChangeEventHandler(object sender, C1ReportsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class feesRecDataTable : global::System.Data.TypedTableBase<feesRecRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnStdName;
            
            private global::System.Data.DataColumn columnsClass;
            
            private global::System.Data.DataColumn columnAmtPaid;
            
            private global::System.Data.DataColumn columnAmtPaidW;
            
            private global::System.Data.DataColumn columnDateP;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnHead;
            
            private global::System.Data.DataColumn columnPicture;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public feesRecDataTable() {
                this.TableName = "feesRec";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal feesRecDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected feesRecDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StdNameColumn {
                get {
                    return this.columnStdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sClassColumn {
                get {
                    return this.columnsClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmtPaidColumn {
                get {
                    return this.columnAmtPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmtPaidWColumn {
                get {
                    return this.columnAmtPaidW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatePColumn {
                get {
                    return this.columnDateP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeadColumn {
                get {
                    return this.columnHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PictureColumn {
                get {
                    return this.columnPicture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public feesRecRow this[int index] {
                get {
                    return ((feesRecRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event feesRecRowChangeEventHandler feesRecRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event feesRecRowChangeEventHandler feesRecRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event feesRecRowChangeEventHandler feesRecRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event feesRecRowChangeEventHandler feesRecRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddfeesRecRow(feesRecRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public feesRecRow AddfeesRecRow(string StdName, string sClass, string AmtPaid, string AmtPaidW, string DateP, string Balance, string Head, byte[] Picture) {
                feesRecRow rowfeesRecRow = ((feesRecRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        StdName,
                        sClass,
                        AmtPaid,
                        AmtPaidW,
                        DateP,
                        Balance,
                        Head,
                        Picture};
                rowfeesRecRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfeesRecRow);
                return rowfeesRecRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public feesRecRow FindByid(int id) {
                return ((feesRecRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                feesRecDataTable cln = ((feesRecDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new feesRecDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnStdName = base.Columns["StdName"];
                this.columnsClass = base.Columns["sClass"];
                this.columnAmtPaid = base.Columns["AmtPaid"];
                this.columnAmtPaidW = base.Columns["AmtPaidW"];
                this.columnDateP = base.Columns["DateP"];
                this.columnBalance = base.Columns["Balance"];
                this.columnHead = base.Columns["Head"];
                this.columnPicture = base.Columns["Picture"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnStdName = new global::System.Data.DataColumn("StdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdName);
                this.columnsClass = new global::System.Data.DataColumn("sClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsClass);
                this.columnAmtPaid = new global::System.Data.DataColumn("AmtPaid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmtPaid);
                this.columnAmtPaidW = new global::System.Data.DataColumn("AmtPaidW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmtPaidW);
                this.columnDateP = new global::System.Data.DataColumn("DateP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateP);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnHead = new global::System.Data.DataColumn("Head", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHead);
                this.columnPicture = new global::System.Data.DataColumn("Picture", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnStdName.AllowDBNull = false;
                this.columnStdName.MaxLength = 80;
                this.columnsClass.AllowDBNull = false;
                this.columnsClass.MaxLength = 80;
                this.columnAmtPaid.AllowDBNull = false;
                this.columnAmtPaid.MaxLength = 80;
                this.columnAmtPaidW.AllowDBNull = false;
                this.columnAmtPaidW.MaxLength = 80;
                this.columnDateP.AllowDBNull = false;
                this.columnDateP.MaxLength = 80;
                this.columnBalance.AllowDBNull = false;
                this.columnBalance.MaxLength = 80;
                this.columnHead.AllowDBNull = false;
                this.columnHead.MaxLength = 80;
                this.columnPicture.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public feesRecRow NewfeesRecRow() {
                return ((feesRecRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new feesRecRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(feesRecRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.feesRecRowChanged != null)) {
                    this.feesRecRowChanged(this, new feesRecRowChangeEvent(((feesRecRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.feesRecRowChanging != null)) {
                    this.feesRecRowChanging(this, new feesRecRowChangeEvent(((feesRecRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.feesRecRowDeleted != null)) {
                    this.feesRecRowDeleted(this, new feesRecRowChangeEvent(((feesRecRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.feesRecRowDeleting != null)) {
                    this.feesRecRowDeleting(this, new feesRecRowChangeEvent(((feesRecRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovefeesRecRow(feesRecRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                feesdata ds = new feesdata();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "feesRecDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Grade2FeesRec1DataTable : global::System.Data.TypedTableBase<Grade2FeesRec1Row> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnsname;
            
            private global::System.Data.DataColumn columnsclass;
            
            private global::System.Data.DataColumn columnamtpaid;
            
            private global::System.Data.DataColumn columnamtpaidW;
            
            private global::System.Data.DataColumn columndatep;
            
            private global::System.Data.DataColumn columnbalance;
            
            private global::System.Data.DataColumn columnhead;
            
            private global::System.Data.DataColumn columnpicture;
            
            private global::System.Data.DataColumn columnstatusx;
            
            private global::System.Data.DataColumn columnBeign;
            
            private global::System.Data.DataColumn columnPaymentMethod;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grade2FeesRec1DataTable() {
                this.TableName = "Grade2FeesRec1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Grade2FeesRec1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Grade2FeesRec1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn snameColumn {
                get {
                    return this.columnsname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sclassColumn {
                get {
                    return this.columnsclass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amtpaidColumn {
                get {
                    return this.columnamtpaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amtpaidWColumn {
                get {
                    return this.columnamtpaidW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn datepColumn {
                get {
                    return this.columndatep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn balanceColumn {
                get {
                    return this.columnbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn headColumn {
                get {
                    return this.columnhead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pictureColumn {
                get {
                    return this.columnpicture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn statusxColumn {
                get {
                    return this.columnstatusx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BeignColumn {
                get {
                    return this.columnBeign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentMethodColumn {
                get {
                    return this.columnPaymentMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grade2FeesRec1Row this[int index] {
                get {
                    return ((Grade2FeesRec1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Grade2FeesRec1RowChangeEventHandler Grade2FeesRec1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Grade2FeesRec1RowChangeEventHandler Grade2FeesRec1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Grade2FeesRec1RowChangeEventHandler Grade2FeesRec1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Grade2FeesRec1RowChangeEventHandler Grade2FeesRec1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGrade2FeesRec1Row(Grade2FeesRec1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grade2FeesRec1Row AddGrade2FeesRec1Row(string sname, string sclass, string amtpaid, string amtpaidW, string datep, string balance, string head, byte[] picture, string statusx, string Beign, string PaymentMethod) {
                Grade2FeesRec1Row rowGrade2FeesRec1Row = ((Grade2FeesRec1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        sname,
                        sclass,
                        amtpaid,
                        amtpaidW,
                        datep,
                        balance,
                        head,
                        picture,
                        statusx,
                        Beign,
                        PaymentMethod};
                rowGrade2FeesRec1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowGrade2FeesRec1Row);
                return rowGrade2FeesRec1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grade2FeesRec1Row FindByid(int id) {
                return ((Grade2FeesRec1Row)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Grade2FeesRec1DataTable cln = ((Grade2FeesRec1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Grade2FeesRec1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnsname = base.Columns["sname"];
                this.columnsclass = base.Columns["sclass"];
                this.columnamtpaid = base.Columns["amtpaid"];
                this.columnamtpaidW = base.Columns["amtpaidW"];
                this.columndatep = base.Columns["datep"];
                this.columnbalance = base.Columns["balance"];
                this.columnhead = base.Columns["head"];
                this.columnpicture = base.Columns["picture"];
                this.columnstatusx = base.Columns["statusx"];
                this.columnBeign = base.Columns["Beign"];
                this.columnPaymentMethod = base.Columns["PaymentMethod"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnsname = new global::System.Data.DataColumn("sname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsname);
                this.columnsclass = new global::System.Data.DataColumn("sclass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsclass);
                this.columnamtpaid = new global::System.Data.DataColumn("amtpaid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamtpaid);
                this.columnamtpaidW = new global::System.Data.DataColumn("amtpaidW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamtpaidW);
                this.columndatep = new global::System.Data.DataColumn("datep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatep);
                this.columnbalance = new global::System.Data.DataColumn("balance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbalance);
                this.columnhead = new global::System.Data.DataColumn("head", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhead);
                this.columnpicture = new global::System.Data.DataColumn("picture", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpicture);
                this.columnstatusx = new global::System.Data.DataColumn("statusx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatusx);
                this.columnBeign = new global::System.Data.DataColumn("Beign", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeign);
                this.columnPaymentMethod = new global::System.Data.DataColumn("PaymentMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentMethod);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnsname.AllowDBNull = false;
                this.columnsname.MaxLength = 80;
                this.columnsclass.AllowDBNull = false;
                this.columnsclass.MaxLength = 80;
                this.columnamtpaid.AllowDBNull = false;
                this.columnamtpaid.MaxLength = 80;
                this.columnamtpaidW.AllowDBNull = false;
                this.columnamtpaidW.MaxLength = 80;
                this.columndatep.AllowDBNull = false;
                this.columndatep.MaxLength = 80;
                this.columnbalance.AllowDBNull = false;
                this.columnbalance.MaxLength = 80;
                this.columnhead.AllowDBNull = false;
                this.columnhead.MaxLength = 80;
                this.columnstatusx.MaxLength = 80;
                this.columnBeign.MaxLength = 80;
                this.columnPaymentMethod.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grade2FeesRec1Row NewGrade2FeesRec1Row() {
                return ((Grade2FeesRec1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Grade2FeesRec1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Grade2FeesRec1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Grade2FeesRec1RowChanged != null)) {
                    this.Grade2FeesRec1RowChanged(this, new Grade2FeesRec1RowChangeEvent(((Grade2FeesRec1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Grade2FeesRec1RowChanging != null)) {
                    this.Grade2FeesRec1RowChanging(this, new Grade2FeesRec1RowChangeEvent(((Grade2FeesRec1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Grade2FeesRec1RowDeleted != null)) {
                    this.Grade2FeesRec1RowDeleted(this, new Grade2FeesRec1RowChangeEvent(((Grade2FeesRec1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Grade2FeesRec1RowDeleting != null)) {
                    this.Grade2FeesRec1RowDeleting(this, new Grade2FeesRec1RowChangeEvent(((Grade2FeesRec1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGrade2FeesRec1Row(Grade2FeesRec1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                feesdata ds = new feesdata();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Grade2FeesRec1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class C1ReportsDataTable : global::System.Data.TypedTableBase<C1ReportsRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnStdName;
            
            private global::System.Data.DataColumn columnSclass;
            
            private global::System.Data.DataColumn columnTerm;
            
            private global::System.Data.DataColumn columnPromoted;
            
            private global::System.Data.DataColumn columnopenDate;
            
            private global::System.Data.DataColumn columnyeaxr;
            
            private global::System.Data.DataColumn columnAttendance;
            
            private global::System.Data.DataColumn columnNumOnRoll;
            
            private global::System.Data.DataColumn columnFeesDue;
            
            private global::System.Data.DataColumn columnTcomm;
            
            private global::System.Data.DataColumn columnClassScore;
            
            private global::System.Data.DataColumn columnExScore;
            
            private global::System.Data.DataColumn columnTotalScore;
            
            private global::System.Data.DataColumn columnGrade;
            
            private global::System.Data.DataColumn columnPosition;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnMClassScore;
            
            private global::System.Data.DataColumn columnMExScore;
            
            private global::System.Data.DataColumn columnMTotalScore;
            
            private global::System.Data.DataColumn columnMGrade;
            
            private global::System.Data.DataColumn columnMPosition;
            
            private global::System.Data.DataColumn columnMRemark;
            
            private global::System.Data.DataColumn columnSClassScore;
            
            private global::System.Data.DataColumn columnSExScore;
            
            private global::System.Data.DataColumn columnSTotalScore;
            
            private global::System.Data.DataColumn columnSGrade;
            
            private global::System.Data.DataColumn columnSPosition;
            
            private global::System.Data.DataColumn columnSRemark;
            
            private global::System.Data.DataColumn columnSSClassScore;
            
            private global::System.Data.DataColumn columnSSExScore;
            
            private global::System.Data.DataColumn columnSSTotalScore;
            
            private global::System.Data.DataColumn columnSSGrade;
            
            private global::System.Data.DataColumn columnSSPosition;
            
            private global::System.Data.DataColumn columnSSRemark;
            
            private global::System.Data.DataColumn columnFrClassScore;
            
            private global::System.Data.DataColumn columnFrExScore;
            
            private global::System.Data.DataColumn columnFrTotalScore;
            
            private global::System.Data.DataColumn columnFrGrade;
            
            private global::System.Data.DataColumn columnFrPosition;
            
            private global::System.Data.DataColumn columnFrRemark;
            
            private global::System.Data.DataColumn columnTwClassScore;
            
            private global::System.Data.DataColumn columnTwExScore;
            
            private global::System.Data.DataColumn columnTwTotalScore;
            
            private global::System.Data.DataColumn columnTwGrade;
            
            private global::System.Data.DataColumn columnTwPosition;
            
            private global::System.Data.DataColumn columnTwRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C1ReportsDataTable() {
                this.TableName = "C1Reports";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal C1ReportsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected C1ReportsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StdNameColumn {
                get {
                    return this.columnStdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SclassColumn {
                get {
                    return this.columnSclass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TermColumn {
                get {
                    return this.columnTerm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PromotedColumn {
                get {
                    return this.columnPromoted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn openDateColumn {
                get {
                    return this.columnopenDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn yeaxrColumn {
                get {
                    return this.columnyeaxr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendanceColumn {
                get {
                    return this.columnAttendance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumOnRollColumn {
                get {
                    return this.columnNumOnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FeesDueColumn {
                get {
                    return this.columnFeesDue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TcommColumn {
                get {
                    return this.columnTcomm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClassScoreColumn {
                get {
                    return this.columnClassScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExScoreColumn {
                get {
                    return this.columnExScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalScoreColumn {
                get {
                    return this.columnTotalScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GradeColumn {
                get {
                    return this.columnGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PositionColumn {
                get {
                    return this.columnPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MClassScoreColumn {
                get {
                    return this.columnMClassScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MExScoreColumn {
                get {
                    return this.columnMExScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MTotalScoreColumn {
                get {
                    return this.columnMTotalScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MGradeColumn {
                get {
                    return this.columnMGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MPositionColumn {
                get {
                    return this.columnMPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MRemarkColumn {
                get {
                    return this.columnMRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SClassScoreColumn {
                get {
                    return this.columnSClassScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SExScoreColumn {
                get {
                    return this.columnSExScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STotalScoreColumn {
                get {
                    return this.columnSTotalScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SGradeColumn {
                get {
                    return this.columnSGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SPositionColumn {
                get {
                    return this.columnSPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SRemarkColumn {
                get {
                    return this.columnSRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSClassScoreColumn {
                get {
                    return this.columnSSClassScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSExScoreColumn {
                get {
                    return this.columnSSExScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSTotalScoreColumn {
                get {
                    return this.columnSSTotalScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSGradeColumn {
                get {
                    return this.columnSSGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSPositionColumn {
                get {
                    return this.columnSSPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSRemarkColumn {
                get {
                    return this.columnSSRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrClassScoreColumn {
                get {
                    return this.columnFrClassScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrExScoreColumn {
                get {
                    return this.columnFrExScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrTotalScoreColumn {
                get {
                    return this.columnFrTotalScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrGradeColumn {
                get {
                    return this.columnFrGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrPositionColumn {
                get {
                    return this.columnFrPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrRemarkColumn {
                get {
                    return this.columnFrRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TwClassScoreColumn {
                get {
                    return this.columnTwClassScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TwExScoreColumn {
                get {
                    return this.columnTwExScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TwTotalScoreColumn {
                get {
                    return this.columnTwTotalScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TwGradeColumn {
                get {
                    return this.columnTwGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TwPositionColumn {
                get {
                    return this.columnTwPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TwRemarkColumn {
                get {
                    return this.columnTwRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C1ReportsRow this[int index] {
                get {
                    return ((C1ReportsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C1ReportsRowChangeEventHandler C1ReportsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C1ReportsRowChangeEventHandler C1ReportsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C1ReportsRowChangeEventHandler C1ReportsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event C1ReportsRowChangeEventHandler C1ReportsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddC1ReportsRow(C1ReportsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C1ReportsRow AddC1ReportsRow(
                        string StdName, 
                        string Sclass, 
                        string Term, 
                        string Promoted, 
                        string openDate, 
                        string yeaxr, 
                        string Attendance, 
                        string NumOnRoll, 
                        string FeesDue, 
                        string Tcomm, 
                        string ClassScore, 
                        string ExScore, 
                        string TotalScore, 
                        string Grade, 
                        string Position, 
                        string Remark, 
                        string MClassScore, 
                        string MExScore, 
                        string MTotalScore, 
                        string MGrade, 
                        string MPosition, 
                        string MRemark, 
                        string SClassScore, 
                        string SExScore, 
                        string STotalScore, 
                        string SGrade, 
                        string SPosition, 
                        string SRemark, 
                        string SSClassScore, 
                        string SSExScore, 
                        string SSTotalScore, 
                        string SSGrade, 
                        string SSPosition, 
                        string SSRemark, 
                        string FrClassScore, 
                        string FrExScore, 
                        string FrTotalScore, 
                        string FrGrade, 
                        string FrPosition, 
                        string FrRemark, 
                        string TwClassScore, 
                        string TwExScore, 
                        string TwTotalScore, 
                        string TwGrade, 
                        string TwPosition, 
                        string TwRemark) {
                C1ReportsRow rowC1ReportsRow = ((C1ReportsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        StdName,
                        Sclass,
                        Term,
                        Promoted,
                        openDate,
                        yeaxr,
                        Attendance,
                        NumOnRoll,
                        FeesDue,
                        Tcomm,
                        ClassScore,
                        ExScore,
                        TotalScore,
                        Grade,
                        Position,
                        Remark,
                        MClassScore,
                        MExScore,
                        MTotalScore,
                        MGrade,
                        MPosition,
                        MRemark,
                        SClassScore,
                        SExScore,
                        STotalScore,
                        SGrade,
                        SPosition,
                        SRemark,
                        SSClassScore,
                        SSExScore,
                        SSTotalScore,
                        SSGrade,
                        SSPosition,
                        SSRemark,
                        FrClassScore,
                        FrExScore,
                        FrTotalScore,
                        FrGrade,
                        FrPosition,
                        FrRemark,
                        TwClassScore,
                        TwExScore,
                        TwTotalScore,
                        TwGrade,
                        TwPosition,
                        TwRemark};
                rowC1ReportsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowC1ReportsRow);
                return rowC1ReportsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C1ReportsRow FindByid(int id) {
                return ((C1ReportsRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                C1ReportsDataTable cln = ((C1ReportsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new C1ReportsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnStdName = base.Columns["StdName"];
                this.columnSclass = base.Columns["Sclass"];
                this.columnTerm = base.Columns["Term"];
                this.columnPromoted = base.Columns["Promoted"];
                this.columnopenDate = base.Columns["openDate"];
                this.columnyeaxr = base.Columns["yeaxr"];
                this.columnAttendance = base.Columns["Attendance"];
                this.columnNumOnRoll = base.Columns["NumOnRoll"];
                this.columnFeesDue = base.Columns["FeesDue"];
                this.columnTcomm = base.Columns["Tcomm"];
                this.columnClassScore = base.Columns["ClassScore"];
                this.columnExScore = base.Columns["ExScore"];
                this.columnTotalScore = base.Columns["TotalScore"];
                this.columnGrade = base.Columns["Grade"];
                this.columnPosition = base.Columns["Position"];
                this.columnRemark = base.Columns["Remark"];
                this.columnMClassScore = base.Columns["MClassScore"];
                this.columnMExScore = base.Columns["MExScore"];
                this.columnMTotalScore = base.Columns["MTotalScore"];
                this.columnMGrade = base.Columns["MGrade"];
                this.columnMPosition = base.Columns["MPosition"];
                this.columnMRemark = base.Columns["MRemark"];
                this.columnSClassScore = base.Columns["SClassScore"];
                this.columnSExScore = base.Columns["SExScore"];
                this.columnSTotalScore = base.Columns["STotalScore"];
                this.columnSGrade = base.Columns["SGrade"];
                this.columnSPosition = base.Columns["SPosition"];
                this.columnSRemark = base.Columns["SRemark"];
                this.columnSSClassScore = base.Columns["SSClassScore"];
                this.columnSSExScore = base.Columns["SSExScore"];
                this.columnSSTotalScore = base.Columns["SSTotalScore"];
                this.columnSSGrade = base.Columns["SSGrade"];
                this.columnSSPosition = base.Columns["SSPosition"];
                this.columnSSRemark = base.Columns["SSRemark"];
                this.columnFrClassScore = base.Columns["FrClassScore"];
                this.columnFrExScore = base.Columns["FrExScore"];
                this.columnFrTotalScore = base.Columns["FrTotalScore"];
                this.columnFrGrade = base.Columns["FrGrade"];
                this.columnFrPosition = base.Columns["FrPosition"];
                this.columnFrRemark = base.Columns["FrRemark"];
                this.columnTwClassScore = base.Columns["TwClassScore"];
                this.columnTwExScore = base.Columns["TwExScore"];
                this.columnTwTotalScore = base.Columns["TwTotalScore"];
                this.columnTwGrade = base.Columns["TwGrade"];
                this.columnTwPosition = base.Columns["TwPosition"];
                this.columnTwRemark = base.Columns["TwRemark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnStdName = new global::System.Data.DataColumn("StdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdName);
                this.columnSclass = new global::System.Data.DataColumn("Sclass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSclass);
                this.columnTerm = new global::System.Data.DataColumn("Term", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerm);
                this.columnPromoted = new global::System.Data.DataColumn("Promoted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPromoted);
                this.columnopenDate = new global::System.Data.DataColumn("openDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopenDate);
                this.columnyeaxr = new global::System.Data.DataColumn("yeaxr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyeaxr);
                this.columnAttendance = new global::System.Data.DataColumn("Attendance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendance);
                this.columnNumOnRoll = new global::System.Data.DataColumn("NumOnRoll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumOnRoll);
                this.columnFeesDue = new global::System.Data.DataColumn("FeesDue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeesDue);
                this.columnTcomm = new global::System.Data.DataColumn("Tcomm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTcomm);
                this.columnClassScore = new global::System.Data.DataColumn("ClassScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassScore);
                this.columnExScore = new global::System.Data.DataColumn("ExScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExScore);
                this.columnTotalScore = new global::System.Data.DataColumn("TotalScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalScore);
                this.columnGrade = new global::System.Data.DataColumn("Grade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrade);
                this.columnPosition = new global::System.Data.DataColumn("Position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosition);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnMClassScore = new global::System.Data.DataColumn("MClassScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMClassScore);
                this.columnMExScore = new global::System.Data.DataColumn("MExScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMExScore);
                this.columnMTotalScore = new global::System.Data.DataColumn("MTotalScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTotalScore);
                this.columnMGrade = new global::System.Data.DataColumn("MGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMGrade);
                this.columnMPosition = new global::System.Data.DataColumn("MPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPosition);
                this.columnMRemark = new global::System.Data.DataColumn("MRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMRemark);
                this.columnSClassScore = new global::System.Data.DataColumn("SClassScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSClassScore);
                this.columnSExScore = new global::System.Data.DataColumn("SExScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSExScore);
                this.columnSTotalScore = new global::System.Data.DataColumn("STotalScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTotalScore);
                this.columnSGrade = new global::System.Data.DataColumn("SGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSGrade);
                this.columnSPosition = new global::System.Data.DataColumn("SPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPosition);
                this.columnSRemark = new global::System.Data.DataColumn("SRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSRemark);
                this.columnSSClassScore = new global::System.Data.DataColumn("SSClassScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSClassScore);
                this.columnSSExScore = new global::System.Data.DataColumn("SSExScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSExScore);
                this.columnSSTotalScore = new global::System.Data.DataColumn("SSTotalScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSTotalScore);
                this.columnSSGrade = new global::System.Data.DataColumn("SSGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSGrade);
                this.columnSSPosition = new global::System.Data.DataColumn("SSPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSPosition);
                this.columnSSRemark = new global::System.Data.DataColumn("SSRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSRemark);
                this.columnFrClassScore = new global::System.Data.DataColumn("FrClassScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrClassScore);
                this.columnFrExScore = new global::System.Data.DataColumn("FrExScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrExScore);
                this.columnFrTotalScore = new global::System.Data.DataColumn("FrTotalScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrTotalScore);
                this.columnFrGrade = new global::System.Data.DataColumn("FrGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrGrade);
                this.columnFrPosition = new global::System.Data.DataColumn("FrPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrPosition);
                this.columnFrRemark = new global::System.Data.DataColumn("FrRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrRemark);
                this.columnTwClassScore = new global::System.Data.DataColumn("TwClassScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwClassScore);
                this.columnTwExScore = new global::System.Data.DataColumn("TwExScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwExScore);
                this.columnTwTotalScore = new global::System.Data.DataColumn("TwTotalScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwTotalScore);
                this.columnTwGrade = new global::System.Data.DataColumn("TwGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwGrade);
                this.columnTwPosition = new global::System.Data.DataColumn("TwPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwPosition);
                this.columnTwRemark = new global::System.Data.DataColumn("TwRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnStdName.AllowDBNull = false;
                this.columnStdName.MaxLength = 80;
                this.columnSclass.AllowDBNull = false;
                this.columnSclass.MaxLength = 80;
                this.columnTerm.AllowDBNull = false;
                this.columnTerm.MaxLength = 80;
                this.columnPromoted.AllowDBNull = false;
                this.columnPromoted.MaxLength = 80;
                this.columnopenDate.AllowDBNull = false;
                this.columnopenDate.MaxLength = 80;
                this.columnyeaxr.AllowDBNull = false;
                this.columnyeaxr.MaxLength = 80;
                this.columnAttendance.AllowDBNull = false;
                this.columnAttendance.MaxLength = 80;
                this.columnNumOnRoll.AllowDBNull = false;
                this.columnNumOnRoll.MaxLength = 80;
                this.columnFeesDue.AllowDBNull = false;
                this.columnFeesDue.MaxLength = 80;
                this.columnTcomm.AllowDBNull = false;
                this.columnTcomm.MaxLength = 80;
                this.columnClassScore.AllowDBNull = false;
                this.columnClassScore.MaxLength = 80;
                this.columnExScore.AllowDBNull = false;
                this.columnExScore.MaxLength = 80;
                this.columnTotalScore.AllowDBNull = false;
                this.columnTotalScore.MaxLength = 80;
                this.columnGrade.AllowDBNull = false;
                this.columnGrade.MaxLength = 80;
                this.columnPosition.AllowDBNull = false;
                this.columnPosition.MaxLength = 80;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 80;
                this.columnMClassScore.AllowDBNull = false;
                this.columnMClassScore.MaxLength = 80;
                this.columnMExScore.AllowDBNull = false;
                this.columnMExScore.MaxLength = 80;
                this.columnMTotalScore.AllowDBNull = false;
                this.columnMTotalScore.MaxLength = 80;
                this.columnMGrade.AllowDBNull = false;
                this.columnMGrade.MaxLength = 80;
                this.columnMPosition.AllowDBNull = false;
                this.columnMPosition.MaxLength = 80;
                this.columnMRemark.AllowDBNull = false;
                this.columnMRemark.MaxLength = 80;
                this.columnSClassScore.AllowDBNull = false;
                this.columnSClassScore.MaxLength = 80;
                this.columnSExScore.AllowDBNull = false;
                this.columnSExScore.MaxLength = 80;
                this.columnSTotalScore.AllowDBNull = false;
                this.columnSTotalScore.MaxLength = 80;
                this.columnSGrade.AllowDBNull = false;
                this.columnSGrade.MaxLength = 80;
                this.columnSPosition.AllowDBNull = false;
                this.columnSPosition.MaxLength = 80;
                this.columnSRemark.AllowDBNull = false;
                this.columnSRemark.MaxLength = 80;
                this.columnSSClassScore.AllowDBNull = false;
                this.columnSSClassScore.MaxLength = 80;
                this.columnSSExScore.AllowDBNull = false;
                this.columnSSExScore.MaxLength = 80;
                this.columnSSTotalScore.AllowDBNull = false;
                this.columnSSTotalScore.MaxLength = 80;
                this.columnSSGrade.AllowDBNull = false;
                this.columnSSGrade.MaxLength = 80;
                this.columnSSPosition.AllowDBNull = false;
                this.columnSSPosition.MaxLength = 80;
                this.columnSSRemark.AllowDBNull = false;
                this.columnSSRemark.MaxLength = 80;
                this.columnFrClassScore.AllowDBNull = false;
                this.columnFrClassScore.MaxLength = 80;
                this.columnFrExScore.AllowDBNull = false;
                this.columnFrExScore.MaxLength = 80;
                this.columnFrTotalScore.AllowDBNull = false;
                this.columnFrTotalScore.MaxLength = 80;
                this.columnFrGrade.AllowDBNull = false;
                this.columnFrGrade.MaxLength = 80;
                this.columnFrPosition.AllowDBNull = false;
                this.columnFrPosition.MaxLength = 80;
                this.columnFrRemark.AllowDBNull = false;
                this.columnFrRemark.MaxLength = 80;
                this.columnTwClassScore.AllowDBNull = false;
                this.columnTwClassScore.MaxLength = 80;
                this.columnTwExScore.AllowDBNull = false;
                this.columnTwExScore.MaxLength = 80;
                this.columnTwTotalScore.AllowDBNull = false;
                this.columnTwTotalScore.MaxLength = 80;
                this.columnTwGrade.AllowDBNull = false;
                this.columnTwGrade.MaxLength = 80;
                this.columnTwPosition.AllowDBNull = false;
                this.columnTwPosition.MaxLength = 80;
                this.columnTwRemark.AllowDBNull = false;
                this.columnTwRemark.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C1ReportsRow NewC1ReportsRow() {
                return ((C1ReportsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new C1ReportsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(C1ReportsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.C1ReportsRowChanged != null)) {
                    this.C1ReportsRowChanged(this, new C1ReportsRowChangeEvent(((C1ReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.C1ReportsRowChanging != null)) {
                    this.C1ReportsRowChanging(this, new C1ReportsRowChangeEvent(((C1ReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.C1ReportsRowDeleted != null)) {
                    this.C1ReportsRowDeleted(this, new C1ReportsRowChangeEvent(((C1ReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.C1ReportsRowDeleting != null)) {
                    this.C1ReportsRowDeleting(this, new C1ReportsRowChangeEvent(((C1ReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveC1ReportsRow(C1ReportsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                feesdata ds = new feesdata();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "C1ReportsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row> {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row AddDataTable1Row() {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                feesdata ds = new feesdata();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class feesRecRow : global::System.Data.DataRow {
            
            private feesRecDataTable tablefeesRec;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal feesRecRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefeesRec = ((feesRecDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablefeesRec.idColumn]));
                }
                set {
                    this[this.tablefeesRec.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StdName {
                get {
                    return ((string)(this[this.tablefeesRec.StdNameColumn]));
                }
                set {
                    this[this.tablefeesRec.StdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sClass {
                get {
                    return ((string)(this[this.tablefeesRec.sClassColumn]));
                }
                set {
                    this[this.tablefeesRec.sClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AmtPaid {
                get {
                    return ((string)(this[this.tablefeesRec.AmtPaidColumn]));
                }
                set {
                    this[this.tablefeesRec.AmtPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AmtPaidW {
                get {
                    return ((string)(this[this.tablefeesRec.AmtPaidWColumn]));
                }
                set {
                    this[this.tablefeesRec.AmtPaidWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DateP {
                get {
                    return ((string)(this[this.tablefeesRec.DatePColumn]));
                }
                set {
                    this[this.tablefeesRec.DatePColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Balance {
                get {
                    return ((string)(this[this.tablefeesRec.BalanceColumn]));
                }
                set {
                    this[this.tablefeesRec.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Head {
                get {
                    return ((string)(this[this.tablefeesRec.HeadColumn]));
                }
                set {
                    this[this.tablefeesRec.HeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Picture {
                get {
                    return ((byte[])(this[this.tablefeesRec.PictureColumn]));
                }
                set {
                    this[this.tablefeesRec.PictureColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Grade2FeesRec1Row : global::System.Data.DataRow {
            
            private Grade2FeesRec1DataTable tableGrade2FeesRec1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Grade2FeesRec1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGrade2FeesRec1 = ((Grade2FeesRec1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableGrade2FeesRec1.idColumn]));
                }
                set {
                    this[this.tableGrade2FeesRec1.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sname {
                get {
                    return ((string)(this[this.tableGrade2FeesRec1.snameColumn]));
                }
                set {
                    this[this.tableGrade2FeesRec1.snameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sclass {
                get {
                    return ((string)(this[this.tableGrade2FeesRec1.sclassColumn]));
                }
                set {
                    this[this.tableGrade2FeesRec1.sclassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string amtpaid {
                get {
                    return ((string)(this[this.tableGrade2FeesRec1.amtpaidColumn]));
                }
                set {
                    this[this.tableGrade2FeesRec1.amtpaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string amtpaidW {
                get {
                    return ((string)(this[this.tableGrade2FeesRec1.amtpaidWColumn]));
                }
                set {
                    this[this.tableGrade2FeesRec1.amtpaidWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string datep {
                get {
                    return ((string)(this[this.tableGrade2FeesRec1.datepColumn]));
                }
                set {
                    this[this.tableGrade2FeesRec1.datepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string balance {
                get {
                    return ((string)(this[this.tableGrade2FeesRec1.balanceColumn]));
                }
                set {
                    this[this.tableGrade2FeesRec1.balanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string head {
                get {
                    return ((string)(this[this.tableGrade2FeesRec1.headColumn]));
                }
                set {
                    this[this.tableGrade2FeesRec1.headColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] picture {
                get {
                    try {
                        return ((byte[])(this[this.tableGrade2FeesRec1.pictureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'picture\' in table \'Grade2FeesRec1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGrade2FeesRec1.pictureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string statusx {
                get {
                    try {
                        return ((string)(this[this.tableGrade2FeesRec1.statusxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statusx\' in table \'Grade2FeesRec1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGrade2FeesRec1.statusxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Beign {
                get {
                    try {
                        return ((string)(this[this.tableGrade2FeesRec1.BeignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Beign\' in table \'Grade2FeesRec1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGrade2FeesRec1.BeignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentMethod {
                get {
                    try {
                        return ((string)(this[this.tableGrade2FeesRec1.PaymentMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentMethod\' in table \'Grade2FeesRec1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGrade2FeesRec1.PaymentMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspictureNull() {
                return this.IsNull(this.tableGrade2FeesRec1.pictureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpictureNull() {
                this[this.tableGrade2FeesRec1.pictureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstatusxNull() {
                return this.IsNull(this.tableGrade2FeesRec1.statusxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstatusxNull() {
                this[this.tableGrade2FeesRec1.statusxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBeignNull() {
                return this.IsNull(this.tableGrade2FeesRec1.BeignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBeignNull() {
                this[this.tableGrade2FeesRec1.BeignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentMethodNull() {
                return this.IsNull(this.tableGrade2FeesRec1.PaymentMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentMethodNull() {
                this[this.tableGrade2FeesRec1.PaymentMethodColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class C1ReportsRow : global::System.Data.DataRow {
            
            private C1ReportsDataTable tableC1Reports;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal C1ReportsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableC1Reports = ((C1ReportsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableC1Reports.idColumn]));
                }
                set {
                    this[this.tableC1Reports.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StdName {
                get {
                    return ((string)(this[this.tableC1Reports.StdNameColumn]));
                }
                set {
                    this[this.tableC1Reports.StdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sclass {
                get {
                    return ((string)(this[this.tableC1Reports.SclassColumn]));
                }
                set {
                    this[this.tableC1Reports.SclassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Term {
                get {
                    return ((string)(this[this.tableC1Reports.TermColumn]));
                }
                set {
                    this[this.tableC1Reports.TermColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Promoted {
                get {
                    return ((string)(this[this.tableC1Reports.PromotedColumn]));
                }
                set {
                    this[this.tableC1Reports.PromotedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string openDate {
                get {
                    return ((string)(this[this.tableC1Reports.openDateColumn]));
                }
                set {
                    this[this.tableC1Reports.openDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string yeaxr {
                get {
                    return ((string)(this[this.tableC1Reports.yeaxrColumn]));
                }
                set {
                    this[this.tableC1Reports.yeaxrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Attendance {
                get {
                    return ((string)(this[this.tableC1Reports.AttendanceColumn]));
                }
                set {
                    this[this.tableC1Reports.AttendanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumOnRoll {
                get {
                    return ((string)(this[this.tableC1Reports.NumOnRollColumn]));
                }
                set {
                    this[this.tableC1Reports.NumOnRollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FeesDue {
                get {
                    return ((string)(this[this.tableC1Reports.FeesDueColumn]));
                }
                set {
                    this[this.tableC1Reports.FeesDueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tcomm {
                get {
                    return ((string)(this[this.tableC1Reports.TcommColumn]));
                }
                set {
                    this[this.tableC1Reports.TcommColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClassScore {
                get {
                    return ((string)(this[this.tableC1Reports.ClassScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.ClassScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExScore {
                get {
                    return ((string)(this[this.tableC1Reports.ExScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.ExScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalScore {
                get {
                    return ((string)(this[this.tableC1Reports.TotalScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.TotalScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Grade {
                get {
                    return ((string)(this[this.tableC1Reports.GradeColumn]));
                }
                set {
                    this[this.tableC1Reports.GradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Position {
                get {
                    return ((string)(this[this.tableC1Reports.PositionColumn]));
                }
                set {
                    this[this.tableC1Reports.PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    return ((string)(this[this.tableC1Reports.RemarkColumn]));
                }
                set {
                    this[this.tableC1Reports.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MClassScore {
                get {
                    return ((string)(this[this.tableC1Reports.MClassScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.MClassScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MExScore {
                get {
                    return ((string)(this[this.tableC1Reports.MExScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.MExScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MTotalScore {
                get {
                    return ((string)(this[this.tableC1Reports.MTotalScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.MTotalScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MGrade {
                get {
                    return ((string)(this[this.tableC1Reports.MGradeColumn]));
                }
                set {
                    this[this.tableC1Reports.MGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MPosition {
                get {
                    return ((string)(this[this.tableC1Reports.MPositionColumn]));
                }
                set {
                    this[this.tableC1Reports.MPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MRemark {
                get {
                    return ((string)(this[this.tableC1Reports.MRemarkColumn]));
                }
                set {
                    this[this.tableC1Reports.MRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SClassScore {
                get {
                    return ((string)(this[this.tableC1Reports.SClassScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.SClassScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SExScore {
                get {
                    return ((string)(this[this.tableC1Reports.SExScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.SExScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STotalScore {
                get {
                    return ((string)(this[this.tableC1Reports.STotalScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.STotalScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SGrade {
                get {
                    return ((string)(this[this.tableC1Reports.SGradeColumn]));
                }
                set {
                    this[this.tableC1Reports.SGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SPosition {
                get {
                    return ((string)(this[this.tableC1Reports.SPositionColumn]));
                }
                set {
                    this[this.tableC1Reports.SPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SRemark {
                get {
                    return ((string)(this[this.tableC1Reports.SRemarkColumn]));
                }
                set {
                    this[this.tableC1Reports.SRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSClassScore {
                get {
                    return ((string)(this[this.tableC1Reports.SSClassScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.SSClassScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSExScore {
                get {
                    return ((string)(this[this.tableC1Reports.SSExScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.SSExScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSTotalScore {
                get {
                    return ((string)(this[this.tableC1Reports.SSTotalScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.SSTotalScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSGrade {
                get {
                    return ((string)(this[this.tableC1Reports.SSGradeColumn]));
                }
                set {
                    this[this.tableC1Reports.SSGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSPosition {
                get {
                    return ((string)(this[this.tableC1Reports.SSPositionColumn]));
                }
                set {
                    this[this.tableC1Reports.SSPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSRemark {
                get {
                    return ((string)(this[this.tableC1Reports.SSRemarkColumn]));
                }
                set {
                    this[this.tableC1Reports.SSRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrClassScore {
                get {
                    return ((string)(this[this.tableC1Reports.FrClassScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.FrClassScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrExScore {
                get {
                    return ((string)(this[this.tableC1Reports.FrExScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.FrExScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrTotalScore {
                get {
                    return ((string)(this[this.tableC1Reports.FrTotalScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.FrTotalScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrGrade {
                get {
                    return ((string)(this[this.tableC1Reports.FrGradeColumn]));
                }
                set {
                    this[this.tableC1Reports.FrGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrPosition {
                get {
                    return ((string)(this[this.tableC1Reports.FrPositionColumn]));
                }
                set {
                    this[this.tableC1Reports.FrPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrRemark {
                get {
                    return ((string)(this[this.tableC1Reports.FrRemarkColumn]));
                }
                set {
                    this[this.tableC1Reports.FrRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TwClassScore {
                get {
                    return ((string)(this[this.tableC1Reports.TwClassScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.TwClassScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TwExScore {
                get {
                    return ((string)(this[this.tableC1Reports.TwExScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.TwExScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TwTotalScore {
                get {
                    return ((string)(this[this.tableC1Reports.TwTotalScoreColumn]));
                }
                set {
                    this[this.tableC1Reports.TwTotalScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TwGrade {
                get {
                    return ((string)(this[this.tableC1Reports.TwGradeColumn]));
                }
                set {
                    this[this.tableC1Reports.TwGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TwPosition {
                get {
                    return ((string)(this[this.tableC1Reports.TwPositionColumn]));
                }
                set {
                    this[this.tableC1Reports.TwPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TwRemark {
                get {
                    return ((string)(this[this.tableC1Reports.TwRemarkColumn]));
                }
                set {
                    this[this.tableC1Reports.TwRemarkColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class feesRecRowChangeEvent : global::System.EventArgs {
            
            private feesRecRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public feesRecRowChangeEvent(feesRecRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public feesRecRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Grade2FeesRec1RowChangeEvent : global::System.EventArgs {
            
            private Grade2FeesRec1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grade2FeesRec1RowChangeEvent(Grade2FeesRec1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grade2FeesRec1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class C1ReportsRowChangeEvent : global::System.EventArgs {
            
            private C1ReportsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C1ReportsRowChangeEvent(C1ReportsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public C1ReportsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace KingDessySchool.cs.feesdataTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class feesRecTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public feesRecTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "feesRec";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("StdName", "StdName");
            tableMapping.ColumnMappings.Add("sClass", "sClass");
            tableMapping.ColumnMappings.Add("AmtPaid", "AmtPaid");
            tableMapping.ColumnMappings.Add("AmtPaidW", "AmtPaidW");
            tableMapping.ColumnMappings.Add("DateP", "DateP");
            tableMapping.ColumnMappings.Add("Balance", "Balance");
            tableMapping.ColumnMappings.Add("Head", "Head");
            tableMapping.ColumnMappings.Add("Picture", "Picture");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[feesRec] WHERE (([id] = @Original_id) AND ([StdName] = @Original_StdName) AND ([sClass] = @Original_sClass) AND ([AmtPaid] = @Original_AmtPaid) AND ([AmtPaidW] = @Original_AmtPaidW) AND ([DateP] = @Original_DateP) AND ([Balance] = @Original_Balance) AND ([Head] = @Original_Head))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StdName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sClass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sClass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmtPaid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmtPaid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmtPaidW", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmtPaidW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Balance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Balance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Head", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Head", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[feesRec] ([StdName], [sClass], [AmtPaid], [AmtPaidW], [DateP], [Balance], [Head], [Picture]) VALUES (@StdName, @sClass, @AmtPaid, @AmtPaidW, @DateP, @Balance, @Head, @Picture);
SELECT id, StdName, sClass, AmtPaid, AmtPaidW, DateP, Balance, Head, Picture FROM feesRec WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StdName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sClass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sClass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmtPaid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmtPaid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmtPaidW", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmtPaidW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Balance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Balance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Head", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Head", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Picture", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[feesRec] SET [StdName] = @StdName, [sClass] = @sClass, [AmtPaid] = @AmtPaid, [AmtPaidW] = @AmtPaidW, [DateP] = @DateP, [Balance] = @Balance, [Head] = @Head, [Picture] = @Picture WHERE (([id] = @Original_id) AND ([StdName] = @Original_StdName) AND ([sClass] = @Original_sClass) AND ([AmtPaid] = @Original_AmtPaid) AND ([AmtPaidW] = @Original_AmtPaidW) AND ([DateP] = @Original_DateP) AND ([Balance] = @Original_Balance) AND ([Head] = @Original_Head));
SELECT id, StdName, sClass, AmtPaid, AmtPaidW, DateP, Balance, Head, Picture FROM feesRec WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StdName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sClass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sClass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmtPaid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmtPaid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmtPaidW", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmtPaidW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Balance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Balance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Head", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Head", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Picture", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Picture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StdName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sClass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sClass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmtPaid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmtPaid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmtPaidW", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmtPaidW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Balance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Balance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Head", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Head", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::KingDessySchool.cs.Properties.Settings.Default.DessySoftConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, StdName, sClass, AmtPaid, AmtPaidW, DateP, Balance, Head, Picture FROM" +
                " dbo.feesRec";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(feesdata.feesRecDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual feesdata.feesRecDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            feesdata.feesRecDataTable dataTable = new feesdata.feesRecDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(feesdata.feesRecDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(feesdata dataSet) {
            return this.Adapter.Update(dataSet, "feesRec");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_StdName, string Original_sClass, string Original_AmtPaid, string Original_AmtPaidW, string Original_DateP, string Original_Balance, string Original_Head) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_StdName == null)) {
                throw new global::System.ArgumentNullException("Original_StdName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_StdName));
            }
            if ((Original_sClass == null)) {
                throw new global::System.ArgumentNullException("Original_sClass");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_sClass));
            }
            if ((Original_AmtPaid == null)) {
                throw new global::System.ArgumentNullException("Original_AmtPaid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_AmtPaid));
            }
            if ((Original_AmtPaidW == null)) {
                throw new global::System.ArgumentNullException("Original_AmtPaidW");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_AmtPaidW));
            }
            if ((Original_DateP == null)) {
                throw new global::System.ArgumentNullException("Original_DateP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_DateP));
            }
            if ((Original_Balance == null)) {
                throw new global::System.ArgumentNullException("Original_Balance");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Balance));
            }
            if ((Original_Head == null)) {
                throw new global::System.ArgumentNullException("Original_Head");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Head));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string StdName, string sClass, string AmtPaid, string AmtPaidW, string DateP, string Balance, string Head, byte[] Picture) {
            if ((StdName == null)) {
                throw new global::System.ArgumentNullException("StdName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(StdName));
            }
            if ((sClass == null)) {
                throw new global::System.ArgumentNullException("sClass");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(sClass));
            }
            if ((AmtPaid == null)) {
                throw new global::System.ArgumentNullException("AmtPaid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(AmtPaid));
            }
            if ((AmtPaidW == null)) {
                throw new global::System.ArgumentNullException("AmtPaidW");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(AmtPaidW));
            }
            if ((DateP == null)) {
                throw new global::System.ArgumentNullException("DateP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DateP));
            }
            if ((Balance == null)) {
                throw new global::System.ArgumentNullException("Balance");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Balance));
            }
            if ((Head == null)) {
                throw new global::System.ArgumentNullException("Head");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Head));
            }
            if ((Picture == null)) {
                throw new global::System.ArgumentNullException("Picture");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte[])(Picture));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string StdName, 
                    string sClass, 
                    string AmtPaid, 
                    string AmtPaidW, 
                    string DateP, 
                    string Balance, 
                    string Head, 
                    byte[] Picture, 
                    int Original_id, 
                    string Original_StdName, 
                    string Original_sClass, 
                    string Original_AmtPaid, 
                    string Original_AmtPaidW, 
                    string Original_DateP, 
                    string Original_Balance, 
                    string Original_Head, 
                    int id) {
            if ((StdName == null)) {
                throw new global::System.ArgumentNullException("StdName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(StdName));
            }
            if ((sClass == null)) {
                throw new global::System.ArgumentNullException("sClass");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(sClass));
            }
            if ((AmtPaid == null)) {
                throw new global::System.ArgumentNullException("AmtPaid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(AmtPaid));
            }
            if ((AmtPaidW == null)) {
                throw new global::System.ArgumentNullException("AmtPaidW");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(AmtPaidW));
            }
            if ((DateP == null)) {
                throw new global::System.ArgumentNullException("DateP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DateP));
            }
            if ((Balance == null)) {
                throw new global::System.ArgumentNullException("Balance");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Balance));
            }
            if ((Head == null)) {
                throw new global::System.ArgumentNullException("Head");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Head));
            }
            if ((Picture == null)) {
                throw new global::System.ArgumentNullException("Picture");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte[])(Picture));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_id));
            if ((Original_StdName == null)) {
                throw new global::System.ArgumentNullException("Original_StdName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_StdName));
            }
            if ((Original_sClass == null)) {
                throw new global::System.ArgumentNullException("Original_sClass");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_sClass));
            }
            if ((Original_AmtPaid == null)) {
                throw new global::System.ArgumentNullException("Original_AmtPaid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_AmtPaid));
            }
            if ((Original_AmtPaidW == null)) {
                throw new global::System.ArgumentNullException("Original_AmtPaidW");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_AmtPaidW));
            }
            if ((Original_DateP == null)) {
                throw new global::System.ArgumentNullException("Original_DateP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_DateP));
            }
            if ((Original_Balance == null)) {
                throw new global::System.ArgumentNullException("Original_Balance");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Balance));
            }
            if ((Original_Head == null)) {
                throw new global::System.ArgumentNullException("Original_Head");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Head));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string StdName, 
                    string sClass, 
                    string AmtPaid, 
                    string AmtPaidW, 
                    string DateP, 
                    string Balance, 
                    string Head, 
                    byte[] Picture, 
                    int Original_id, 
                    string Original_StdName, 
                    string Original_sClass, 
                    string Original_AmtPaid, 
                    string Original_AmtPaidW, 
                    string Original_DateP, 
                    string Original_Balance, 
                    string Original_Head) {
            return this.Update(StdName, sClass, AmtPaid, AmtPaidW, DateP, Balance, Head, Picture, Original_id, Original_StdName, Original_sClass, Original_AmtPaid, Original_AmtPaidW, Original_DateP, Original_Balance, Original_Head, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Grade2FeesRec1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Grade2FeesRec1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Grade2FeesRec1";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("sname", "sname");
            tableMapping.ColumnMappings.Add("sclass", "sclass");
            tableMapping.ColumnMappings.Add("amtpaid", "amtpaid");
            tableMapping.ColumnMappings.Add("amtpaidW", "amtpaidW");
            tableMapping.ColumnMappings.Add("datep", "datep");
            tableMapping.ColumnMappings.Add("balance", "balance");
            tableMapping.ColumnMappings.Add("head", "head");
            tableMapping.ColumnMappings.Add("picture", "picture");
            tableMapping.ColumnMappings.Add("statusx", "statusx");
            tableMapping.ColumnMappings.Add("Beign", "Beign");
            tableMapping.ColumnMappings.Add("PaymentMethod", "PaymentMethod");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Grade2FeesRec1] WHERE (([id] = @Original_id) AND ([sname] = @Original_sname) AND ([sclass] = @Original_sclass) AND ([amtpaid] = @Original_amtpaid) AND ([amtpaidW] = @Original_amtpaidW) AND ([datep] = @Original_datep) AND ([balance] = @Original_balance) AND ([head] = @Original_head) AND ((@IsNull_statusx = 1 AND [statusx] IS NULL) OR ([statusx] = @Original_statusx)) AND ((@IsNull_Beign = 1 AND [Beign] IS NULL) OR ([Beign] = @Original_Beign)) AND ((@IsNull_PaymentMethod = 1 AND [PaymentMethod] IS NULL) OR ([PaymentMethod] = @Original_PaymentMethod)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sclass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sclass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_amtpaid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "amtpaid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_amtpaidW", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "amtpaidW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_datep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_balance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "balance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_head", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "head", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_statusx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusx", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_statusx", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusx", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Beign", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beign", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Beign", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beign", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaymentMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaymentMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Grade2FeesRec1] ([sname], [sclass], [amtpaid], [amtpaidW], [datep], [balance], [head], [picture], [statusx], [Beign], [PaymentMethod]) VALUES (@sname, @sclass, @amtpaid, @amtpaidW, @datep, @balance, @head, @picture, @statusx, @Beign, @PaymentMethod);
SELECT id, sname, sclass, amtpaid, amtpaidW, datep, balance, head, picture, statusx, Beign, PaymentMethod FROM Grade2FeesRec1 WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sclass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sclass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@amtpaid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "amtpaid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@amtpaidW", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "amtpaidW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@balance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "balance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@head", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "head", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@picture", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "picture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@statusx", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusx", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Beign", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Grade2FeesRec1] SET [sname] = @sname, [sclass] = @sclass, [amtpaid] = @amtpaid, [amtpaidW] = @amtpaidW, [datep] = @datep, [balance] = @balance, [head] = @head, [picture] = @picture, [statusx] = @statusx, [Beign] = @Beign, [PaymentMethod] = @PaymentMethod WHERE (([id] = @Original_id) AND ([sname] = @Original_sname) AND ([sclass] = @Original_sclass) AND ([amtpaid] = @Original_amtpaid) AND ([amtpaidW] = @Original_amtpaidW) AND ([datep] = @Original_datep) AND ([balance] = @Original_balance) AND ([head] = @Original_head) AND ((@IsNull_statusx = 1 AND [statusx] IS NULL) OR ([statusx] = @Original_statusx)) AND ((@IsNull_Beign = 1 AND [Beign] IS NULL) OR ([Beign] = @Original_Beign)) AND ((@IsNull_PaymentMethod = 1 AND [PaymentMethod] IS NULL) OR ([PaymentMethod] = @Original_PaymentMethod)));
SELECT id, sname, sclass, amtpaid, amtpaidW, datep, balance, head, picture, statusx, Beign, PaymentMethod FROM Grade2FeesRec1 WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sclass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sclass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@amtpaid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "amtpaid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@amtpaidW", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "amtpaidW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@balance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "balance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@head", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "head", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@picture", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "picture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@statusx", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusx", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Beign", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sclass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sclass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_amtpaid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "amtpaid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_amtpaidW", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "amtpaidW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_datep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_balance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "balance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_head", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "head", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_statusx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusx", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_statusx", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusx", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Beign", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beign", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Beign", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beign", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaymentMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaymentMethod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::KingDessySchool.cs.Properties.Settings.Default.DessySoftConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, sname, sclass, amtpaid, amtpaidW, datep, balance, head, picture, statu" +
                "sx, Beign, PaymentMethod FROM dbo.Grade2FeesRec1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(feesdata.Grade2FeesRec1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual feesdata.Grade2FeesRec1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            feesdata.Grade2FeesRec1DataTable dataTable = new feesdata.Grade2FeesRec1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(feesdata.Grade2FeesRec1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(feesdata dataSet) {
            return this.Adapter.Update(dataSet, "Grade2FeesRec1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_sname, string Original_sclass, string Original_amtpaid, string Original_amtpaidW, string Original_datep, string Original_balance, string Original_head, string Original_statusx, string Original_Beign, string Original_PaymentMethod) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_sname == null)) {
                throw new global::System.ArgumentNullException("Original_sname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_sname));
            }
            if ((Original_sclass == null)) {
                throw new global::System.ArgumentNullException("Original_sclass");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_sclass));
            }
            if ((Original_amtpaid == null)) {
                throw new global::System.ArgumentNullException("Original_amtpaid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_amtpaid));
            }
            if ((Original_amtpaidW == null)) {
                throw new global::System.ArgumentNullException("Original_amtpaidW");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_amtpaidW));
            }
            if ((Original_datep == null)) {
                throw new global::System.ArgumentNullException("Original_datep");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_datep));
            }
            if ((Original_balance == null)) {
                throw new global::System.ArgumentNullException("Original_balance");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_balance));
            }
            if ((Original_head == null)) {
                throw new global::System.ArgumentNullException("Original_head");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_head));
            }
            if ((Original_statusx == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_statusx));
            }
            if ((Original_Beign == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Beign));
            }
            if ((Original_PaymentMethod == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_PaymentMethod));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string sname, string sclass, string amtpaid, string amtpaidW, string datep, string balance, string head, byte[] picture, string statusx, string Beign, string PaymentMethod) {
            if ((sname == null)) {
                throw new global::System.ArgumentNullException("sname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(sname));
            }
            if ((sclass == null)) {
                throw new global::System.ArgumentNullException("sclass");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(sclass));
            }
            if ((amtpaid == null)) {
                throw new global::System.ArgumentNullException("amtpaid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(amtpaid));
            }
            if ((amtpaidW == null)) {
                throw new global::System.ArgumentNullException("amtpaidW");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(amtpaidW));
            }
            if ((datep == null)) {
                throw new global::System.ArgumentNullException("datep");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(datep));
            }
            if ((balance == null)) {
                throw new global::System.ArgumentNullException("balance");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(balance));
            }
            if ((head == null)) {
                throw new global::System.ArgumentNullException("head");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(head));
            }
            if ((picture == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte[])(picture));
            }
            if ((statusx == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(statusx));
            }
            if ((Beign == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Beign));
            }
            if ((PaymentMethod == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(PaymentMethod));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string sname, 
                    string sclass, 
                    string amtpaid, 
                    string amtpaidW, 
                    string datep, 
                    string balance, 
                    string head, 
                    byte[] picture, 
                    string statusx, 
                    string Beign, 
                    string PaymentMethod, 
                    int Original_id, 
                    string Original_sname, 
                    string Original_sclass, 
                    string Original_amtpaid, 
                    string Original_amtpaidW, 
                    string Original_datep, 
                    string Original_balance, 
                    string Original_head, 
                    string Original_statusx, 
                    string Original_Beign, 
                    string Original_PaymentMethod, 
                    int id) {
            if ((sname == null)) {
                throw new global::System.ArgumentNullException("sname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(sname));
            }
            if ((sclass == null)) {
                throw new global::System.ArgumentNullException("sclass");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(sclass));
            }
            if ((amtpaid == null)) {
                throw new global::System.ArgumentNullException("amtpaid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(amtpaid));
            }
            if ((amtpaidW == null)) {
                throw new global::System.ArgumentNullException("amtpaidW");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(amtpaidW));
            }
            if ((datep == null)) {
                throw new global::System.ArgumentNullException("datep");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(datep));
            }
            if ((balance == null)) {
                throw new global::System.ArgumentNullException("balance");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(balance));
            }
            if ((head == null)) {
                throw new global::System.ArgumentNullException("head");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(head));
            }
            if ((picture == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte[])(picture));
            }
            if ((statusx == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(statusx));
            }
            if ((Beign == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Beign));
            }
            if ((PaymentMethod == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(PaymentMethod));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_id));
            if ((Original_sname == null)) {
                throw new global::System.ArgumentNullException("Original_sname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_sname));
            }
            if ((Original_sclass == null)) {
                throw new global::System.ArgumentNullException("Original_sclass");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_sclass));
            }
            if ((Original_amtpaid == null)) {
                throw new global::System.ArgumentNullException("Original_amtpaid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_amtpaid));
            }
            if ((Original_amtpaidW == null)) {
                throw new global::System.ArgumentNullException("Original_amtpaidW");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_amtpaidW));
            }
            if ((Original_datep == null)) {
                throw new global::System.ArgumentNullException("Original_datep");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_datep));
            }
            if ((Original_balance == null)) {
                throw new global::System.ArgumentNullException("Original_balance");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_balance));
            }
            if ((Original_head == null)) {
                throw new global::System.ArgumentNullException("Original_head");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_head));
            }
            if ((Original_statusx == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_statusx));
            }
            if ((Original_Beign == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Beign));
            }
            if ((Original_PaymentMethod == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_PaymentMethod));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string sname, 
                    string sclass, 
                    string amtpaid, 
                    string amtpaidW, 
                    string datep, 
                    string balance, 
                    string head, 
                    byte[] picture, 
                    string statusx, 
                    string Beign, 
                    string PaymentMethod, 
                    int Original_id, 
                    string Original_sname, 
                    string Original_sclass, 
                    string Original_amtpaid, 
                    string Original_amtpaidW, 
                    string Original_datep, 
                    string Original_balance, 
                    string Original_head, 
                    string Original_statusx, 
                    string Original_Beign, 
                    string Original_PaymentMethod) {
            return this.Update(sname, sclass, amtpaid, amtpaidW, datep, balance, head, picture, statusx, Beign, PaymentMethod, Original_id, Original_sname, Original_sclass, Original_amtpaid, Original_amtpaidW, Original_datep, Original_balance, Original_head, Original_statusx, Original_Beign, Original_PaymentMethod, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class C1ReportsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public C1ReportsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "C1Reports";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("StdName", "StdName");
            tableMapping.ColumnMappings.Add("Sclass", "Sclass");
            tableMapping.ColumnMappings.Add("Term", "Term");
            tableMapping.ColumnMappings.Add("Promoted", "Promoted");
            tableMapping.ColumnMappings.Add("openDate", "openDate");
            tableMapping.ColumnMappings.Add("yeaxr", "yeaxr");
            tableMapping.ColumnMappings.Add("Attendance", "Attendance");
            tableMapping.ColumnMappings.Add("NumOnRoll", "NumOnRoll");
            tableMapping.ColumnMappings.Add("FeesDue", "FeesDue");
            tableMapping.ColumnMappings.Add("Tcomm", "Tcomm");
            tableMapping.ColumnMappings.Add("ClassScore", "ClassScore");
            tableMapping.ColumnMappings.Add("ExScore", "ExScore");
            tableMapping.ColumnMappings.Add("TotalScore", "TotalScore");
            tableMapping.ColumnMappings.Add("Grade", "Grade");
            tableMapping.ColumnMappings.Add("Position", "Position");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("MClassScore", "MClassScore");
            tableMapping.ColumnMappings.Add("MExScore", "MExScore");
            tableMapping.ColumnMappings.Add("MTotalScore", "MTotalScore");
            tableMapping.ColumnMappings.Add("MGrade", "MGrade");
            tableMapping.ColumnMappings.Add("MPosition", "MPosition");
            tableMapping.ColumnMappings.Add("MRemark", "MRemark");
            tableMapping.ColumnMappings.Add("SClassScore", "SClassScore");
            tableMapping.ColumnMappings.Add("SExScore", "SExScore");
            tableMapping.ColumnMappings.Add("STotalScore", "STotalScore");
            tableMapping.ColumnMappings.Add("SGrade", "SGrade");
            tableMapping.ColumnMappings.Add("SPosition", "SPosition");
            tableMapping.ColumnMappings.Add("SRemark", "SRemark");
            tableMapping.ColumnMappings.Add("SSClassScore", "SSClassScore");
            tableMapping.ColumnMappings.Add("SSExScore", "SSExScore");
            tableMapping.ColumnMappings.Add("SSTotalScore", "SSTotalScore");
            tableMapping.ColumnMappings.Add("SSGrade", "SSGrade");
            tableMapping.ColumnMappings.Add("SSPosition", "SSPosition");
            tableMapping.ColumnMappings.Add("SSRemark", "SSRemark");
            tableMapping.ColumnMappings.Add("FrClassScore", "FrClassScore");
            tableMapping.ColumnMappings.Add("FrExScore", "FrExScore");
            tableMapping.ColumnMappings.Add("FrTotalScore", "FrTotalScore");
            tableMapping.ColumnMappings.Add("FrGrade", "FrGrade");
            tableMapping.ColumnMappings.Add("FrPosition", "FrPosition");
            tableMapping.ColumnMappings.Add("FrRemark", "FrRemark");
            tableMapping.ColumnMappings.Add("TwClassScore", "TwClassScore");
            tableMapping.ColumnMappings.Add("TwExScore", "TwExScore");
            tableMapping.ColumnMappings.Add("TwTotalScore", "TwTotalScore");
            tableMapping.ColumnMappings.Add("TwGrade", "TwGrade");
            tableMapping.ColumnMappings.Add("TwPosition", "TwPosition");
            tableMapping.ColumnMappings.Add("TwRemark", "TwRemark");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[C1Reports] WHERE (([id] = @Original_id) AND ([StdName] = @Orig" +
                "inal_StdName) AND ([Sclass] = @Original_Sclass) AND ([Term] = @Original_Term) AN" +
                "D ([Promoted] = @Original_Promoted) AND ([openDate] = @Original_openDate) AND ([" +
                "yeaxr] = @Original_yeaxr) AND ([Attendance] = @Original_Attendance) AND ([NumOnR" +
                "oll] = @Original_NumOnRoll) AND ([FeesDue] = @Original_FeesDue) AND ([Tcomm] = @" +
                "Original_Tcomm) AND ([ClassScore] = @Original_ClassScore) AND ([ExScore] = @Orig" +
                "inal_ExScore) AND ([TotalScore] = @Original_TotalScore) AND ([Grade] = @Original" +
                "_Grade) AND ([Position] = @Original_Position) AND ([Remark] = @Original_Remark) " +
                "AND ([MClassScore] = @Original_MClassScore) AND ([MExScore] = @Original_MExScore" +
                ") AND ([MTotalScore] = @Original_MTotalScore) AND ([MGrade] = @Original_MGrade) " +
                "AND ([MPosition] = @Original_MPosition) AND ([MRemark] = @Original_MRemark) AND " +
                "([SClassScore] = @Original_SClassScore) AND ([SExScore] = @Original_SExScore) AN" +
                "D ([STotalScore] = @Original_STotalScore) AND ([SGrade] = @Original_SGrade) AND " +
                "([SPosition] = @Original_SPosition) AND ([SRemark] = @Original_SRemark) AND ([SS" +
                "ClassScore] = @Original_SSClassScore) AND ([SSExScore] = @Original_SSExScore) AN" +
                "D ([SSTotalScore] = @Original_SSTotalScore) AND ([SSGrade] = @Original_SSGrade) " +
                "AND ([SSPosition] = @Original_SSPosition) AND ([SSRemark] = @Original_SSRemark) " +
                "AND ([FrClassScore] = @Original_FrClassScore) AND ([FrExScore] = @Original_FrExS" +
                "core) AND ([FrTotalScore] = @Original_FrTotalScore) AND ([FrGrade] = @Original_F" +
                "rGrade) AND ([FrPosition] = @Original_FrPosition) AND ([FrRemark] = @Original_Fr" +
                "Remark) AND ([TwClassScore] = @Original_TwClassScore) AND ([TwExScore] = @Origin" +
                "al_TwExScore) AND ([TwTotalScore] = @Original_TwTotalScore) AND ([TwGrade] = @Or" +
                "iginal_TwGrade) AND ([TwPosition] = @Original_TwPosition) AND ([TwRemark] = @Ori" +
                "ginal_TwRemark))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StdName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sclass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sclass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Term", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Term", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Promoted", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Promoted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_openDate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "openDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_yeaxr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yeaxr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Attendance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attendance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumOnRoll", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumOnRoll", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FeesDue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeesDue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tcomm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tcomm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Grade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Position", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Position", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MTotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSTotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrTotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwTotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[C1Reports] ([StdName], [Sclass], [Term], [Promoted], [openDate" +
                "], [yeaxr], [Attendance], [NumOnRoll], [FeesDue], [Tcomm], [ClassScore], [ExScor" +
                "e], [TotalScore], [Grade], [Position], [Remark], [MClassScore], [MExScore], [MTo" +
                "talScore], [MGrade], [MPosition], [MRemark], [SClassScore], [SExScore], [STotalS" +
                "core], [SGrade], [SPosition], [SRemark], [SSClassScore], [SSExScore], [SSTotalSc" +
                "ore], [SSGrade], [SSPosition], [SSRemark], [FrClassScore], [FrExScore], [FrTotal" +
                "Score], [FrGrade], [FrPosition], [FrRemark], [TwClassScore], [TwExScore], [TwTot" +
                "alScore], [TwGrade], [TwPosition], [TwRemark]) VALUES (@StdName, @Sclass, @Term," +
                " @Promoted, @openDate, @yeaxr, @Attendance, @NumOnRoll, @FeesDue, @Tcomm, @Class" +
                "Score, @ExScore, @TotalScore, @Grade, @Position, @Remark, @MClassScore, @MExScor" +
                "e, @MTotalScore, @MGrade, @MPosition, @MRemark, @SClassScore, @SExScore, @STotal" +
                "Score, @SGrade, @SPosition, @SRemark, @SSClassScore, @SSExScore, @SSTotalScore, " +
                "@SSGrade, @SSPosition, @SSRemark, @FrClassScore, @FrExScore, @FrTotalScore, @FrG" +
                "rade, @FrPosition, @FrRemark, @TwClassScore, @TwExScore, @TwTotalScore, @TwGrade" +
                ", @TwPosition, @TwRemark);\r\nSELECT id, StdName, Sclass, Term, Promoted, openDate" +
                ", yeaxr, Attendance, NumOnRoll, FeesDue, Tcomm, ClassScore, ExScore, TotalScore," +
                " Grade, Position, Remark, MClassScore, MExScore, MTotalScore, MGrade, MPosition," +
                " MRemark, SClassScore, SExScore, STotalScore, SGrade, SPosition, SRemark, SSClas" +
                "sScore, SSExScore, SSTotalScore, SSGrade, SSPosition, SSRemark, FrClassScore, Fr" +
                "ExScore, FrTotalScore, FrGrade, FrPosition, FrRemark, TwClassScore, TwExScore, T" +
                "wTotalScore, TwGrade, TwPosition, TwRemark FROM C1Reports WHERE (id = SCOPE_IDEN" +
                "TITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StdName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sclass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sclass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Term", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Term", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Promoted", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Promoted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@openDate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "openDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@yeaxr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yeaxr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attendance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attendance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumOnRoll", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumOnRoll", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeesDue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeesDue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tcomm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tcomm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Grade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Position", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Position", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MTotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSTotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrTotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwTotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[C1Reports] SET [StdName] = @StdName, [Sclass] = @Sclass, [Term] = @" +
                "Term, [Promoted] = @Promoted, [openDate] = @openDate, [yeaxr] = @yeaxr, [Attenda" +
                "nce] = @Attendance, [NumOnRoll] = @NumOnRoll, [FeesDue] = @FeesDue, [Tcomm] = @T" +
                "comm, [ClassScore] = @ClassScore, [ExScore] = @ExScore, [TotalScore] = @TotalSco" +
                "re, [Grade] = @Grade, [Position] = @Position, [Remark] = @Remark, [MClassScore] " +
                "= @MClassScore, [MExScore] = @MExScore, [MTotalScore] = @MTotalScore, [MGrade] =" +
                " @MGrade, [MPosition] = @MPosition, [MRemark] = @MRemark, [SClassScore] = @SClas" +
                "sScore, [SExScore] = @SExScore, [STotalScore] = @STotalScore, [SGrade] = @SGrade" +
                ", [SPosition] = @SPosition, [SRemark] = @SRemark, [SSClassScore] = @SSClassScore" +
                ", [SSExScore] = @SSExScore, [SSTotalScore] = @SSTotalScore, [SSGrade] = @SSGrade" +
                ", [SSPosition] = @SSPosition, [SSRemark] = @SSRemark, [FrClassScore] = @FrClassS" +
                "core, [FrExScore] = @FrExScore, [FrTotalScore] = @FrTotalScore, [FrGrade] = @FrG" +
                "rade, [FrPosition] = @FrPosition, [FrRemark] = @FrRemark, [TwClassScore] = @TwCl" +
                "assScore, [TwExScore] = @TwExScore, [TwTotalScore] = @TwTotalScore, [TwGrade] = " +
                "@TwGrade, [TwPosition] = @TwPosition, [TwRemark] = @TwRemark WHERE (([id] = @Ori" +
                "ginal_id) AND ([StdName] = @Original_StdName) AND ([Sclass] = @Original_Sclass) " +
                "AND ([Term] = @Original_Term) AND ([Promoted] = @Original_Promoted) AND ([openDa" +
                "te] = @Original_openDate) AND ([yeaxr] = @Original_yeaxr) AND ([Attendance] = @O" +
                "riginal_Attendance) AND ([NumOnRoll] = @Original_NumOnRoll) AND ([FeesDue] = @Or" +
                "iginal_FeesDue) AND ([Tcomm] = @Original_Tcomm) AND ([ClassScore] = @Original_Cl" +
                "assScore) AND ([ExScore] = @Original_ExScore) AND ([TotalScore] = @Original_Tota" +
                "lScore) AND ([Grade] = @Original_Grade) AND ([Position] = @Original_Position) AN" +
                "D ([Remark] = @Original_Remark) AND ([MClassScore] = @Original_MClassScore) AND " +
                "([MExScore] = @Original_MExScore) AND ([MTotalScore] = @Original_MTotalScore) AN" +
                "D ([MGrade] = @Original_MGrade) AND ([MPosition] = @Original_MPosition) AND ([MR" +
                "emark] = @Original_MRemark) AND ([SClassScore] = @Original_SClassScore) AND ([SE" +
                "xScore] = @Original_SExScore) AND ([STotalScore] = @Original_STotalScore) AND ([" +
                "SGrade] = @Original_SGrade) AND ([SPosition] = @Original_SPosition) AND ([SRemar" +
                "k] = @Original_SRemark) AND ([SSClassScore] = @Original_SSClassScore) AND ([SSEx" +
                "Score] = @Original_SSExScore) AND ([SSTotalScore] = @Original_SSTotalScore) AND " +
                "([SSGrade] = @Original_SSGrade) AND ([SSPosition] = @Original_SSPosition) AND ([" +
                "SSRemark] = @Original_SSRemark) AND ([FrClassScore] = @Original_FrClassScore) AN" +
                "D ([FrExScore] = @Original_FrExScore) AND ([FrTotalScore] = @Original_FrTotalSco" +
                "re) AND ([FrGrade] = @Original_FrGrade) AND ([FrPosition] = @Original_FrPosition" +
                ") AND ([FrRemark] = @Original_FrRemark) AND ([TwClassScore] = @Original_TwClassS" +
                "core) AND ([TwExScore] = @Original_TwExScore) AND ([TwTotalScore] = @Original_Tw" +
                "TotalScore) AND ([TwGrade] = @Original_TwGrade) AND ([TwPosition] = @Original_Tw" +
                "Position) AND ([TwRemark] = @Original_TwRemark));\r\nSELECT id, StdName, Sclass, T" +
                "erm, Promoted, openDate, yeaxr, Attendance, NumOnRoll, FeesDue, Tcomm, ClassScor" +
                "e, ExScore, TotalScore, Grade, Position, Remark, MClassScore, MExScore, MTotalSc" +
                "ore, MGrade, MPosition, MRemark, SClassScore, SExScore, STotalScore, SGrade, SPo" +
                "sition, SRemark, SSClassScore, SSExScore, SSTotalScore, SSGrade, SSPosition, SSR" +
                "emark, FrClassScore, FrExScore, FrTotalScore, FrGrade, FrPosition, FrRemark, TwC" +
                "lassScore, TwExScore, TwTotalScore, TwGrade, TwPosition, TwRemark FROM C1Reports" +
                " WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StdName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sclass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sclass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Term", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Term", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Promoted", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Promoted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@openDate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "openDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@yeaxr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yeaxr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attendance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attendance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumOnRoll", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumOnRoll", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeesDue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeesDue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tcomm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tcomm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Grade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Position", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Position", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MTotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSTotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrTotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwClassScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwExScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwTotalScore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StdName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sclass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sclass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Term", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Term", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Promoted", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Promoted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_openDate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "openDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_yeaxr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "yeaxr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Attendance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attendance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumOnRoll", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumOnRoll", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FeesDue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeesDue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tcomm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tcomm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Grade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Position", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Position", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MTotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSTotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrTotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FrRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwClassScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwClassScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwExScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwExScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwTotalScore", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwTotalScore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwGrade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::KingDessySchool.cs.Properties.Settings.Default.DessySoftConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT id, StdName, Sclass, Term, Promoted, openDate, yeaxr, Attendance, NumOnRoll, FeesDue, Tcomm, ClassScore, ExScore, TotalScore, Grade, Position, Remark, MClassScore, MExScore, MTotalScore, MGrade, MPosition, MRemark, SClassScore, SExScore, STotalScore, SGrade, SPosition, SRemark, SSClassScore, SSExScore, SSTotalScore, SSGrade, SSPosition, SSRemark, FrClassScore, FrExScore, FrTotalScore, FrGrade, FrPosition, FrRemark, TwClassScore, TwExScore, TwTotalScore, TwGrade, TwPosition, TwRemark FROM dbo.C1Reports";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(feesdata.C1ReportsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual feesdata.C1ReportsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            feesdata.C1ReportsDataTable dataTable = new feesdata.C1ReportsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(feesdata.C1ReportsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(feesdata dataSet) {
            return this.Adapter.Update(dataSet, "C1Reports");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_StdName, 
                    string Original_Sclass, 
                    string Original_Term, 
                    string Original_Promoted, 
                    string Original_openDate, 
                    string Original_yeaxr, 
                    string Original_Attendance, 
                    string Original_NumOnRoll, 
                    string Original_FeesDue, 
                    string Original_Tcomm, 
                    string Original_ClassScore, 
                    string Original_ExScore, 
                    string Original_TotalScore, 
                    string Original_Grade, 
                    string Original_Position, 
                    string Original_Remark, 
                    string Original_MClassScore, 
                    string Original_MExScore, 
                    string Original_MTotalScore, 
                    string Original_MGrade, 
                    string Original_MPosition, 
                    string Original_MRemark, 
                    string Original_SClassScore, 
                    string Original_SExScore, 
                    string Original_STotalScore, 
                    string Original_SGrade, 
                    string Original_SPosition, 
                    string Original_SRemark, 
                    string Original_SSClassScore, 
                    string Original_SSExScore, 
                    string Original_SSTotalScore, 
                    string Original_SSGrade, 
                    string Original_SSPosition, 
                    string Original_SSRemark, 
                    string Original_FrClassScore, 
                    string Original_FrExScore, 
                    string Original_FrTotalScore, 
                    string Original_FrGrade, 
                    string Original_FrPosition, 
                    string Original_FrRemark, 
                    string Original_TwClassScore, 
                    string Original_TwExScore, 
                    string Original_TwTotalScore, 
                    string Original_TwGrade, 
                    string Original_TwPosition, 
                    string Original_TwRemark) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_StdName == null)) {
                throw new global::System.ArgumentNullException("Original_StdName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_StdName));
            }
            if ((Original_Sclass == null)) {
                throw new global::System.ArgumentNullException("Original_Sclass");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Sclass));
            }
            if ((Original_Term == null)) {
                throw new global::System.ArgumentNullException("Original_Term");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Term));
            }
            if ((Original_Promoted == null)) {
                throw new global::System.ArgumentNullException("Original_Promoted");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Promoted));
            }
            if ((Original_openDate == null)) {
                throw new global::System.ArgumentNullException("Original_openDate");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_openDate));
            }
            if ((Original_yeaxr == null)) {
                throw new global::System.ArgumentNullException("Original_yeaxr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_yeaxr));
            }
            if ((Original_Attendance == null)) {
                throw new global::System.ArgumentNullException("Original_Attendance");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Attendance));
            }
            if ((Original_NumOnRoll == null)) {
                throw new global::System.ArgumentNullException("Original_NumOnRoll");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_NumOnRoll));
            }
            if ((Original_FeesDue == null)) {
                throw new global::System.ArgumentNullException("Original_FeesDue");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_FeesDue));
            }
            if ((Original_Tcomm == null)) {
                throw new global::System.ArgumentNullException("Original_Tcomm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Tcomm));
            }
            if ((Original_ClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_ClassScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ClassScore));
            }
            if ((Original_ExScore == null)) {
                throw new global::System.ArgumentNullException("Original_ExScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ExScore));
            }
            if ((Original_TotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_TotalScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_TotalScore));
            }
            if ((Original_Grade == null)) {
                throw new global::System.ArgumentNullException("Original_Grade");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Grade));
            }
            if ((Original_Position == null)) {
                throw new global::System.ArgumentNullException("Original_Position");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Position));
            }
            if ((Original_Remark == null)) {
                throw new global::System.ArgumentNullException("Original_Remark");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Remark));
            }
            if ((Original_MClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_MClassScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_MClassScore));
            }
            if ((Original_MExScore == null)) {
                throw new global::System.ArgumentNullException("Original_MExScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_MExScore));
            }
            if ((Original_MTotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_MTotalScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_MTotalScore));
            }
            if ((Original_MGrade == null)) {
                throw new global::System.ArgumentNullException("Original_MGrade");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_MGrade));
            }
            if ((Original_MPosition == null)) {
                throw new global::System.ArgumentNullException("Original_MPosition");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_MPosition));
            }
            if ((Original_MRemark == null)) {
                throw new global::System.ArgumentNullException("Original_MRemark");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_MRemark));
            }
            if ((Original_SClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_SClassScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_SClassScore));
            }
            if ((Original_SExScore == null)) {
                throw new global::System.ArgumentNullException("Original_SExScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_SExScore));
            }
            if ((Original_STotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_STotalScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_STotalScore));
            }
            if ((Original_SGrade == null)) {
                throw new global::System.ArgumentNullException("Original_SGrade");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_SGrade));
            }
            if ((Original_SPosition == null)) {
                throw new global::System.ArgumentNullException("Original_SPosition");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_SPosition));
            }
            if ((Original_SRemark == null)) {
                throw new global::System.ArgumentNullException("Original_SRemark");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_SRemark));
            }
            if ((Original_SSClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_SSClassScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_SSClassScore));
            }
            if ((Original_SSExScore == null)) {
                throw new global::System.ArgumentNullException("Original_SSExScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_SSExScore));
            }
            if ((Original_SSTotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_SSTotalScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_SSTotalScore));
            }
            if ((Original_SSGrade == null)) {
                throw new global::System.ArgumentNullException("Original_SSGrade");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_SSGrade));
            }
            if ((Original_SSPosition == null)) {
                throw new global::System.ArgumentNullException("Original_SSPosition");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_SSPosition));
            }
            if ((Original_SSRemark == null)) {
                throw new global::System.ArgumentNullException("Original_SSRemark");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_SSRemark));
            }
            if ((Original_FrClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_FrClassScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_FrClassScore));
            }
            if ((Original_FrExScore == null)) {
                throw new global::System.ArgumentNullException("Original_FrExScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_FrExScore));
            }
            if ((Original_FrTotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_FrTotalScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_FrTotalScore));
            }
            if ((Original_FrGrade == null)) {
                throw new global::System.ArgumentNullException("Original_FrGrade");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_FrGrade));
            }
            if ((Original_FrPosition == null)) {
                throw new global::System.ArgumentNullException("Original_FrPosition");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_FrPosition));
            }
            if ((Original_FrRemark == null)) {
                throw new global::System.ArgumentNullException("Original_FrRemark");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_FrRemark));
            }
            if ((Original_TwClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_TwClassScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_TwClassScore));
            }
            if ((Original_TwExScore == null)) {
                throw new global::System.ArgumentNullException("Original_TwExScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_TwExScore));
            }
            if ((Original_TwTotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_TwTotalScore");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_TwTotalScore));
            }
            if ((Original_TwGrade == null)) {
                throw new global::System.ArgumentNullException("Original_TwGrade");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_TwGrade));
            }
            if ((Original_TwPosition == null)) {
                throw new global::System.ArgumentNullException("Original_TwPosition");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_TwPosition));
            }
            if ((Original_TwRemark == null)) {
                throw new global::System.ArgumentNullException("Original_TwRemark");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_TwRemark));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string StdName, 
                    string Sclass, 
                    string Term, 
                    string Promoted, 
                    string openDate, 
                    string yeaxr, 
                    string Attendance, 
                    string NumOnRoll, 
                    string FeesDue, 
                    string Tcomm, 
                    string ClassScore, 
                    string ExScore, 
                    string TotalScore, 
                    string Grade, 
                    string Position, 
                    string Remark, 
                    string MClassScore, 
                    string MExScore, 
                    string MTotalScore, 
                    string MGrade, 
                    string MPosition, 
                    string MRemark, 
                    string SClassScore, 
                    string SExScore, 
                    string STotalScore, 
                    string SGrade, 
                    string SPosition, 
                    string SRemark, 
                    string SSClassScore, 
                    string SSExScore, 
                    string SSTotalScore, 
                    string SSGrade, 
                    string SSPosition, 
                    string SSRemark, 
                    string FrClassScore, 
                    string FrExScore, 
                    string FrTotalScore, 
                    string FrGrade, 
                    string FrPosition, 
                    string FrRemark, 
                    string TwClassScore, 
                    string TwExScore, 
                    string TwTotalScore, 
                    string TwGrade, 
                    string TwPosition, 
                    string TwRemark) {
            if ((StdName == null)) {
                throw new global::System.ArgumentNullException("StdName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(StdName));
            }
            if ((Sclass == null)) {
                throw new global::System.ArgumentNullException("Sclass");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Sclass));
            }
            if ((Term == null)) {
                throw new global::System.ArgumentNullException("Term");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Term));
            }
            if ((Promoted == null)) {
                throw new global::System.ArgumentNullException("Promoted");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Promoted));
            }
            if ((openDate == null)) {
                throw new global::System.ArgumentNullException("openDate");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(openDate));
            }
            if ((yeaxr == null)) {
                throw new global::System.ArgumentNullException("yeaxr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(yeaxr));
            }
            if ((Attendance == null)) {
                throw new global::System.ArgumentNullException("Attendance");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Attendance));
            }
            if ((NumOnRoll == null)) {
                throw new global::System.ArgumentNullException("NumOnRoll");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(NumOnRoll));
            }
            if ((FeesDue == null)) {
                throw new global::System.ArgumentNullException("FeesDue");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(FeesDue));
            }
            if ((Tcomm == null)) {
                throw new global::System.ArgumentNullException("Tcomm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Tcomm));
            }
            if ((ClassScore == null)) {
                throw new global::System.ArgumentNullException("ClassScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ClassScore));
            }
            if ((ExScore == null)) {
                throw new global::System.ArgumentNullException("ExScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ExScore));
            }
            if ((TotalScore == null)) {
                throw new global::System.ArgumentNullException("TotalScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(TotalScore));
            }
            if ((Grade == null)) {
                throw new global::System.ArgumentNullException("Grade");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Grade));
            }
            if ((Position == null)) {
                throw new global::System.ArgumentNullException("Position");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Position));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Remark));
            }
            if ((MClassScore == null)) {
                throw new global::System.ArgumentNullException("MClassScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(MClassScore));
            }
            if ((MExScore == null)) {
                throw new global::System.ArgumentNullException("MExScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(MExScore));
            }
            if ((MTotalScore == null)) {
                throw new global::System.ArgumentNullException("MTotalScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(MTotalScore));
            }
            if ((MGrade == null)) {
                throw new global::System.ArgumentNullException("MGrade");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(MGrade));
            }
            if ((MPosition == null)) {
                throw new global::System.ArgumentNullException("MPosition");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(MPosition));
            }
            if ((MRemark == null)) {
                throw new global::System.ArgumentNullException("MRemark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(MRemark));
            }
            if ((SClassScore == null)) {
                throw new global::System.ArgumentNullException("SClassScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(SClassScore));
            }
            if ((SExScore == null)) {
                throw new global::System.ArgumentNullException("SExScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(SExScore));
            }
            if ((STotalScore == null)) {
                throw new global::System.ArgumentNullException("STotalScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(STotalScore));
            }
            if ((SGrade == null)) {
                throw new global::System.ArgumentNullException("SGrade");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(SGrade));
            }
            if ((SPosition == null)) {
                throw new global::System.ArgumentNullException("SPosition");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(SPosition));
            }
            if ((SRemark == null)) {
                throw new global::System.ArgumentNullException("SRemark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(SRemark));
            }
            if ((SSClassScore == null)) {
                throw new global::System.ArgumentNullException("SSClassScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(SSClassScore));
            }
            if ((SSExScore == null)) {
                throw new global::System.ArgumentNullException("SSExScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(SSExScore));
            }
            if ((SSTotalScore == null)) {
                throw new global::System.ArgumentNullException("SSTotalScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(SSTotalScore));
            }
            if ((SSGrade == null)) {
                throw new global::System.ArgumentNullException("SSGrade");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(SSGrade));
            }
            if ((SSPosition == null)) {
                throw new global::System.ArgumentNullException("SSPosition");
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(SSPosition));
            }
            if ((SSRemark == null)) {
                throw new global::System.ArgumentNullException("SSRemark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(SSRemark));
            }
            if ((FrClassScore == null)) {
                throw new global::System.ArgumentNullException("FrClassScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(FrClassScore));
            }
            if ((FrExScore == null)) {
                throw new global::System.ArgumentNullException("FrExScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(FrExScore));
            }
            if ((FrTotalScore == null)) {
                throw new global::System.ArgumentNullException("FrTotalScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(FrTotalScore));
            }
            if ((FrGrade == null)) {
                throw new global::System.ArgumentNullException("FrGrade");
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(FrGrade));
            }
            if ((FrPosition == null)) {
                throw new global::System.ArgumentNullException("FrPosition");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(FrPosition));
            }
            if ((FrRemark == null)) {
                throw new global::System.ArgumentNullException("FrRemark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(FrRemark));
            }
            if ((TwClassScore == null)) {
                throw new global::System.ArgumentNullException("TwClassScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(TwClassScore));
            }
            if ((TwExScore == null)) {
                throw new global::System.ArgumentNullException("TwExScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(TwExScore));
            }
            if ((TwTotalScore == null)) {
                throw new global::System.ArgumentNullException("TwTotalScore");
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(TwTotalScore));
            }
            if ((TwGrade == null)) {
                throw new global::System.ArgumentNullException("TwGrade");
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(TwGrade));
            }
            if ((TwPosition == null)) {
                throw new global::System.ArgumentNullException("TwPosition");
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(TwPosition));
            }
            if ((TwRemark == null)) {
                throw new global::System.ArgumentNullException("TwRemark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(TwRemark));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string StdName, 
                    string Sclass, 
                    string Term, 
                    string Promoted, 
                    string openDate, 
                    string yeaxr, 
                    string Attendance, 
                    string NumOnRoll, 
                    string FeesDue, 
                    string Tcomm, 
                    string ClassScore, 
                    string ExScore, 
                    string TotalScore, 
                    string Grade, 
                    string Position, 
                    string Remark, 
                    string MClassScore, 
                    string MExScore, 
                    string MTotalScore, 
                    string MGrade, 
                    string MPosition, 
                    string MRemark, 
                    string SClassScore, 
                    string SExScore, 
                    string STotalScore, 
                    string SGrade, 
                    string SPosition, 
                    string SRemark, 
                    string SSClassScore, 
                    string SSExScore, 
                    string SSTotalScore, 
                    string SSGrade, 
                    string SSPosition, 
                    string SSRemark, 
                    string FrClassScore, 
                    string FrExScore, 
                    string FrTotalScore, 
                    string FrGrade, 
                    string FrPosition, 
                    string FrRemark, 
                    string TwClassScore, 
                    string TwExScore, 
                    string TwTotalScore, 
                    string TwGrade, 
                    string TwPosition, 
                    string TwRemark, 
                    int Original_id, 
                    string Original_StdName, 
                    string Original_Sclass, 
                    string Original_Term, 
                    string Original_Promoted, 
                    string Original_openDate, 
                    string Original_yeaxr, 
                    string Original_Attendance, 
                    string Original_NumOnRoll, 
                    string Original_FeesDue, 
                    string Original_Tcomm, 
                    string Original_ClassScore, 
                    string Original_ExScore, 
                    string Original_TotalScore, 
                    string Original_Grade, 
                    string Original_Position, 
                    string Original_Remark, 
                    string Original_MClassScore, 
                    string Original_MExScore, 
                    string Original_MTotalScore, 
                    string Original_MGrade, 
                    string Original_MPosition, 
                    string Original_MRemark, 
                    string Original_SClassScore, 
                    string Original_SExScore, 
                    string Original_STotalScore, 
                    string Original_SGrade, 
                    string Original_SPosition, 
                    string Original_SRemark, 
                    string Original_SSClassScore, 
                    string Original_SSExScore, 
                    string Original_SSTotalScore, 
                    string Original_SSGrade, 
                    string Original_SSPosition, 
                    string Original_SSRemark, 
                    string Original_FrClassScore, 
                    string Original_FrExScore, 
                    string Original_FrTotalScore, 
                    string Original_FrGrade, 
                    string Original_FrPosition, 
                    string Original_FrRemark, 
                    string Original_TwClassScore, 
                    string Original_TwExScore, 
                    string Original_TwTotalScore, 
                    string Original_TwGrade, 
                    string Original_TwPosition, 
                    string Original_TwRemark, 
                    int id) {
            if ((StdName == null)) {
                throw new global::System.ArgumentNullException("StdName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(StdName));
            }
            if ((Sclass == null)) {
                throw new global::System.ArgumentNullException("Sclass");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Sclass));
            }
            if ((Term == null)) {
                throw new global::System.ArgumentNullException("Term");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Term));
            }
            if ((Promoted == null)) {
                throw new global::System.ArgumentNullException("Promoted");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Promoted));
            }
            if ((openDate == null)) {
                throw new global::System.ArgumentNullException("openDate");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(openDate));
            }
            if ((yeaxr == null)) {
                throw new global::System.ArgumentNullException("yeaxr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(yeaxr));
            }
            if ((Attendance == null)) {
                throw new global::System.ArgumentNullException("Attendance");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Attendance));
            }
            if ((NumOnRoll == null)) {
                throw new global::System.ArgumentNullException("NumOnRoll");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(NumOnRoll));
            }
            if ((FeesDue == null)) {
                throw new global::System.ArgumentNullException("FeesDue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(FeesDue));
            }
            if ((Tcomm == null)) {
                throw new global::System.ArgumentNullException("Tcomm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Tcomm));
            }
            if ((ClassScore == null)) {
                throw new global::System.ArgumentNullException("ClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ClassScore));
            }
            if ((ExScore == null)) {
                throw new global::System.ArgumentNullException("ExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ExScore));
            }
            if ((TotalScore == null)) {
                throw new global::System.ArgumentNullException("TotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(TotalScore));
            }
            if ((Grade == null)) {
                throw new global::System.ArgumentNullException("Grade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Grade));
            }
            if ((Position == null)) {
                throw new global::System.ArgumentNullException("Position");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Position));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Remark));
            }
            if ((MClassScore == null)) {
                throw new global::System.ArgumentNullException("MClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(MClassScore));
            }
            if ((MExScore == null)) {
                throw new global::System.ArgumentNullException("MExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(MExScore));
            }
            if ((MTotalScore == null)) {
                throw new global::System.ArgumentNullException("MTotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(MTotalScore));
            }
            if ((MGrade == null)) {
                throw new global::System.ArgumentNullException("MGrade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(MGrade));
            }
            if ((MPosition == null)) {
                throw new global::System.ArgumentNullException("MPosition");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(MPosition));
            }
            if ((MRemark == null)) {
                throw new global::System.ArgumentNullException("MRemark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(MRemark));
            }
            if ((SClassScore == null)) {
                throw new global::System.ArgumentNullException("SClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(SClassScore));
            }
            if ((SExScore == null)) {
                throw new global::System.ArgumentNullException("SExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(SExScore));
            }
            if ((STotalScore == null)) {
                throw new global::System.ArgumentNullException("STotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(STotalScore));
            }
            if ((SGrade == null)) {
                throw new global::System.ArgumentNullException("SGrade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(SGrade));
            }
            if ((SPosition == null)) {
                throw new global::System.ArgumentNullException("SPosition");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(SPosition));
            }
            if ((SRemark == null)) {
                throw new global::System.ArgumentNullException("SRemark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(SRemark));
            }
            if ((SSClassScore == null)) {
                throw new global::System.ArgumentNullException("SSClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(SSClassScore));
            }
            if ((SSExScore == null)) {
                throw new global::System.ArgumentNullException("SSExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(SSExScore));
            }
            if ((SSTotalScore == null)) {
                throw new global::System.ArgumentNullException("SSTotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(SSTotalScore));
            }
            if ((SSGrade == null)) {
                throw new global::System.ArgumentNullException("SSGrade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(SSGrade));
            }
            if ((SSPosition == null)) {
                throw new global::System.ArgumentNullException("SSPosition");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(SSPosition));
            }
            if ((SSRemark == null)) {
                throw new global::System.ArgumentNullException("SSRemark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(SSRemark));
            }
            if ((FrClassScore == null)) {
                throw new global::System.ArgumentNullException("FrClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(FrClassScore));
            }
            if ((FrExScore == null)) {
                throw new global::System.ArgumentNullException("FrExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(FrExScore));
            }
            if ((FrTotalScore == null)) {
                throw new global::System.ArgumentNullException("FrTotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(FrTotalScore));
            }
            if ((FrGrade == null)) {
                throw new global::System.ArgumentNullException("FrGrade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(FrGrade));
            }
            if ((FrPosition == null)) {
                throw new global::System.ArgumentNullException("FrPosition");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(FrPosition));
            }
            if ((FrRemark == null)) {
                throw new global::System.ArgumentNullException("FrRemark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(FrRemark));
            }
            if ((TwClassScore == null)) {
                throw new global::System.ArgumentNullException("TwClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(TwClassScore));
            }
            if ((TwExScore == null)) {
                throw new global::System.ArgumentNullException("TwExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(TwExScore));
            }
            if ((TwTotalScore == null)) {
                throw new global::System.ArgumentNullException("TwTotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(TwTotalScore));
            }
            if ((TwGrade == null)) {
                throw new global::System.ArgumentNullException("TwGrade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(TwGrade));
            }
            if ((TwPosition == null)) {
                throw new global::System.ArgumentNullException("TwPosition");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(TwPosition));
            }
            if ((TwRemark == null)) {
                throw new global::System.ArgumentNullException("TwRemark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(TwRemark));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_id));
            if ((Original_StdName == null)) {
                throw new global::System.ArgumentNullException("Original_StdName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_StdName));
            }
            if ((Original_Sclass == null)) {
                throw new global::System.ArgumentNullException("Original_Sclass");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_Sclass));
            }
            if ((Original_Term == null)) {
                throw new global::System.ArgumentNullException("Original_Term");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_Term));
            }
            if ((Original_Promoted == null)) {
                throw new global::System.ArgumentNullException("Original_Promoted");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_Promoted));
            }
            if ((Original_openDate == null)) {
                throw new global::System.ArgumentNullException("Original_openDate");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_openDate));
            }
            if ((Original_yeaxr == null)) {
                throw new global::System.ArgumentNullException("Original_yeaxr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_yeaxr));
            }
            if ((Original_Attendance == null)) {
                throw new global::System.ArgumentNullException("Original_Attendance");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_Attendance));
            }
            if ((Original_NumOnRoll == null)) {
                throw new global::System.ArgumentNullException("Original_NumOnRoll");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_NumOnRoll));
            }
            if ((Original_FeesDue == null)) {
                throw new global::System.ArgumentNullException("Original_FeesDue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_FeesDue));
            }
            if ((Original_Tcomm == null)) {
                throw new global::System.ArgumentNullException("Original_Tcomm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_Tcomm));
            }
            if ((Original_ClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_ClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_ClassScore));
            }
            if ((Original_ExScore == null)) {
                throw new global::System.ArgumentNullException("Original_ExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_ExScore));
            }
            if ((Original_TotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_TotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_TotalScore));
            }
            if ((Original_Grade == null)) {
                throw new global::System.ArgumentNullException("Original_Grade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_Grade));
            }
            if ((Original_Position == null)) {
                throw new global::System.ArgumentNullException("Original_Position");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_Position));
            }
            if ((Original_Remark == null)) {
                throw new global::System.ArgumentNullException("Original_Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_Remark));
            }
            if ((Original_MClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_MClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_MClassScore));
            }
            if ((Original_MExScore == null)) {
                throw new global::System.ArgumentNullException("Original_MExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_MExScore));
            }
            if ((Original_MTotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_MTotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_MTotalScore));
            }
            if ((Original_MGrade == null)) {
                throw new global::System.ArgumentNullException("Original_MGrade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_MGrade));
            }
            if ((Original_MPosition == null)) {
                throw new global::System.ArgumentNullException("Original_MPosition");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_MPosition));
            }
            if ((Original_MRemark == null)) {
                throw new global::System.ArgumentNullException("Original_MRemark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_MRemark));
            }
            if ((Original_SClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_SClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_SClassScore));
            }
            if ((Original_SExScore == null)) {
                throw new global::System.ArgumentNullException("Original_SExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_SExScore));
            }
            if ((Original_STotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_STotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_STotalScore));
            }
            if ((Original_SGrade == null)) {
                throw new global::System.ArgumentNullException("Original_SGrade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_SGrade));
            }
            if ((Original_SPosition == null)) {
                throw new global::System.ArgumentNullException("Original_SPosition");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_SPosition));
            }
            if ((Original_SRemark == null)) {
                throw new global::System.ArgumentNullException("Original_SRemark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_SRemark));
            }
            if ((Original_SSClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_SSClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_SSClassScore));
            }
            if ((Original_SSExScore == null)) {
                throw new global::System.ArgumentNullException("Original_SSExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_SSExScore));
            }
            if ((Original_SSTotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_SSTotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_SSTotalScore));
            }
            if ((Original_SSGrade == null)) {
                throw new global::System.ArgumentNullException("Original_SSGrade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_SSGrade));
            }
            if ((Original_SSPosition == null)) {
                throw new global::System.ArgumentNullException("Original_SSPosition");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_SSPosition));
            }
            if ((Original_SSRemark == null)) {
                throw new global::System.ArgumentNullException("Original_SSRemark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_SSRemark));
            }
            if ((Original_FrClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_FrClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_FrClassScore));
            }
            if ((Original_FrExScore == null)) {
                throw new global::System.ArgumentNullException("Original_FrExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_FrExScore));
            }
            if ((Original_FrTotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_FrTotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_FrTotalScore));
            }
            if ((Original_FrGrade == null)) {
                throw new global::System.ArgumentNullException("Original_FrGrade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_FrGrade));
            }
            if ((Original_FrPosition == null)) {
                throw new global::System.ArgumentNullException("Original_FrPosition");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_FrPosition));
            }
            if ((Original_FrRemark == null)) {
                throw new global::System.ArgumentNullException("Original_FrRemark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_FrRemark));
            }
            if ((Original_TwClassScore == null)) {
                throw new global::System.ArgumentNullException("Original_TwClassScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_TwClassScore));
            }
            if ((Original_TwExScore == null)) {
                throw new global::System.ArgumentNullException("Original_TwExScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_TwExScore));
            }
            if ((Original_TwTotalScore == null)) {
                throw new global::System.ArgumentNullException("Original_TwTotalScore");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_TwTotalScore));
            }
            if ((Original_TwGrade == null)) {
                throw new global::System.ArgumentNullException("Original_TwGrade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_TwGrade));
            }
            if ((Original_TwPosition == null)) {
                throw new global::System.ArgumentNullException("Original_TwPosition");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_TwPosition));
            }
            if ((Original_TwRemark == null)) {
                throw new global::System.ArgumentNullException("Original_TwRemark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_TwRemark));
            }
            this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string StdName, 
                    string Sclass, 
                    string Term, 
                    string Promoted, 
                    string openDate, 
                    string yeaxr, 
                    string Attendance, 
                    string NumOnRoll, 
                    string FeesDue, 
                    string Tcomm, 
                    string ClassScore, 
                    string ExScore, 
                    string TotalScore, 
                    string Grade, 
                    string Position, 
                    string Remark, 
                    string MClassScore, 
                    string MExScore, 
                    string MTotalScore, 
                    string MGrade, 
                    string MPosition, 
                    string MRemark, 
                    string SClassScore, 
                    string SExScore, 
                    string STotalScore, 
                    string SGrade, 
                    string SPosition, 
                    string SRemark, 
                    string SSClassScore, 
                    string SSExScore, 
                    string SSTotalScore, 
                    string SSGrade, 
                    string SSPosition, 
                    string SSRemark, 
                    string FrClassScore, 
                    string FrExScore, 
                    string FrTotalScore, 
                    string FrGrade, 
                    string FrPosition, 
                    string FrRemark, 
                    string TwClassScore, 
                    string TwExScore, 
                    string TwTotalScore, 
                    string TwGrade, 
                    string TwPosition, 
                    string TwRemark, 
                    int Original_id, 
                    string Original_StdName, 
                    string Original_Sclass, 
                    string Original_Term, 
                    string Original_Promoted, 
                    string Original_openDate, 
                    string Original_yeaxr, 
                    string Original_Attendance, 
                    string Original_NumOnRoll, 
                    string Original_FeesDue, 
                    string Original_Tcomm, 
                    string Original_ClassScore, 
                    string Original_ExScore, 
                    string Original_TotalScore, 
                    string Original_Grade, 
                    string Original_Position, 
                    string Original_Remark, 
                    string Original_MClassScore, 
                    string Original_MExScore, 
                    string Original_MTotalScore, 
                    string Original_MGrade, 
                    string Original_MPosition, 
                    string Original_MRemark, 
                    string Original_SClassScore, 
                    string Original_SExScore, 
                    string Original_STotalScore, 
                    string Original_SGrade, 
                    string Original_SPosition, 
                    string Original_SRemark, 
                    string Original_SSClassScore, 
                    string Original_SSExScore, 
                    string Original_SSTotalScore, 
                    string Original_SSGrade, 
                    string Original_SSPosition, 
                    string Original_SSRemark, 
                    string Original_FrClassScore, 
                    string Original_FrExScore, 
                    string Original_FrTotalScore, 
                    string Original_FrGrade, 
                    string Original_FrPosition, 
                    string Original_FrRemark, 
                    string Original_TwClassScore, 
                    string Original_TwExScore, 
                    string Original_TwTotalScore, 
                    string Original_TwGrade, 
                    string Original_TwPosition, 
                    string Original_TwRemark) {
            return this.Update(StdName, Sclass, Term, Promoted, openDate, yeaxr, Attendance, NumOnRoll, FeesDue, Tcomm, ClassScore, ExScore, TotalScore, Grade, Position, Remark, MClassScore, MExScore, MTotalScore, MGrade, MPosition, MRemark, SClassScore, SExScore, STotalScore, SGrade, SPosition, SRemark, SSClassScore, SSExScore, SSTotalScore, SSGrade, SSPosition, SSRemark, FrClassScore, FrExScore, FrTotalScore, FrGrade, FrPosition, FrRemark, TwClassScore, TwExScore, TwTotalScore, TwGrade, TwPosition, TwRemark, Original_id, Original_StdName, Original_Sclass, Original_Term, Original_Promoted, Original_openDate, Original_yeaxr, Original_Attendance, Original_NumOnRoll, Original_FeesDue, Original_Tcomm, Original_ClassScore, Original_ExScore, Original_TotalScore, Original_Grade, Original_Position, Original_Remark, Original_MClassScore, Original_MExScore, Original_MTotalScore, Original_MGrade, Original_MPosition, Original_MRemark, Original_SClassScore, Original_SExScore, Original_STotalScore, Original_SGrade, Original_SPosition, Original_SRemark, Original_SSClassScore, Original_SSExScore, Original_SSTotalScore, Original_SSGrade, Original_SSPosition, Original_SSRemark, Original_FrClassScore, Original_FrExScore, Original_FrTotalScore, Original_FrGrade, Original_FrPosition, Original_FrRemark, Original_TwClassScore, Original_TwExScore, Original_TwTotalScore, Original_TwGrade, Original_TwPosition, Original_TwRemark, Original_id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private feesRecTableAdapter _feesRecTableAdapter;
        
        private Grade2FeesRec1TableAdapter _grade2FeesRec1TableAdapter;
        
        private C1ReportsTableAdapter _c1ReportsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public feesRecTableAdapter feesRecTableAdapter {
            get {
                return this._feesRecTableAdapter;
            }
            set {
                this._feesRecTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Grade2FeesRec1TableAdapter Grade2FeesRec1TableAdapter {
            get {
                return this._grade2FeesRec1TableAdapter;
            }
            set {
                this._grade2FeesRec1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public C1ReportsTableAdapter C1ReportsTableAdapter {
            get {
                return this._c1ReportsTableAdapter;
            }
            set {
                this._c1ReportsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._feesRecTableAdapter != null) 
                            && (this._feesRecTableAdapter.Connection != null))) {
                    return this._feesRecTableAdapter.Connection;
                }
                if (((this._grade2FeesRec1TableAdapter != null) 
                            && (this._grade2FeesRec1TableAdapter.Connection != null))) {
                    return this._grade2FeesRec1TableAdapter.Connection;
                }
                if (((this._c1ReportsTableAdapter != null) 
                            && (this._c1ReportsTableAdapter.Connection != null))) {
                    return this._c1ReportsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._feesRecTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._grade2FeesRec1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._c1ReportsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(feesdata dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._feesRecTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.feesRec.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._feesRecTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._grade2FeesRec1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Grade2FeesRec1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._grade2FeesRec1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._c1ReportsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.C1Reports.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._c1ReportsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(feesdata dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._feesRecTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.feesRec.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._feesRecTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._grade2FeesRec1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Grade2FeesRec1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._grade2FeesRec1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._c1ReportsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.C1Reports.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._c1ReportsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(feesdata dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._c1ReportsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.C1Reports.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._c1ReportsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._grade2FeesRec1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Grade2FeesRec1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._grade2FeesRec1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._feesRecTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.feesRec.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._feesRecTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(feesdata dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._feesRecTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._feesRecTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._grade2FeesRec1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._grade2FeesRec1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._c1ReportsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._c1ReportsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._feesRecTableAdapter != null)) {
                    revertConnections.Add(this._feesRecTableAdapter, this._feesRecTableAdapter.Connection);
                    this._feesRecTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._feesRecTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._feesRecTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._feesRecTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._feesRecTableAdapter.Adapter);
                    }
                }
                if ((this._grade2FeesRec1TableAdapter != null)) {
                    revertConnections.Add(this._grade2FeesRec1TableAdapter, this._grade2FeesRec1TableAdapter.Connection);
                    this._grade2FeesRec1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._grade2FeesRec1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._grade2FeesRec1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._grade2FeesRec1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._grade2FeesRec1TableAdapter.Adapter);
                    }
                }
                if ((this._c1ReportsTableAdapter != null)) {
                    revertConnections.Add(this._c1ReportsTableAdapter, this._c1ReportsTableAdapter.Connection);
                    this._c1ReportsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._c1ReportsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._c1ReportsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._c1ReportsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._c1ReportsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._feesRecTableAdapter != null)) {
                    this._feesRecTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._feesRecTableAdapter]));
                    this._feesRecTableAdapter.Transaction = null;
                }
                if ((this._grade2FeesRec1TableAdapter != null)) {
                    this._grade2FeesRec1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._grade2FeesRec1TableAdapter]));
                    this._grade2FeesRec1TableAdapter.Transaction = null;
                }
                if ((this._c1ReportsTableAdapter != null)) {
                    this._c1ReportsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._c1ReportsTableAdapter]));
                    this._c1ReportsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591